---
import BaseLayout from '@layouts/base.astro'
import Logo from '@components/logo.astro'
import { getMusingByShortcode } from '@statmuse/core/musings'
import { rgbToHex } from '@statmuse/core/color'
import { title } from '@lib/meta'
import { imageForgeUrl } from '@lib/path'

const code = Astro.params.code as string
const musing = await getMusingByShortcode(code)
if (!musing) return Astro.redirect('/')

const background = rgbToHex(musing.background_rgba)
const foreground = rgbToHex(musing.foreground_rgba)

const meta = {
  title: title(musing.question_text),
  description: musing.text_plain || undefined,
  facebook: {
    imageUrl: musing.image_url
      ? imageForgeUrl({
          url: musing.image_url,
          bgColor: background,
          type: 'facebook',
        })
      : undefined,
  },
  twitter: {
    imageUrl: musing.image_url
      ? imageForgeUrl({
          url: musing.image_url,
          bgColor: background,
          type: 'twitter',
        })
      : undefined,
  },
}
---

<BaseLayout {meta} colors={{ background, foreground }}>
  <div
    class="bg-team-primary min-h-screen w-full flex flex-col justify-center items-center"
  >
    <header class="w-full h-12 p-4 flex justify-center items-center">
      <a href="https://www.statmuse.com">
        <Logo class="h-8" />
      </a>
    </header>
    <div
      class="flex flex-col items-center justify-between relative min-h-[500px] md:min-h-[700px] w-full max-w-[500px] px-2 md:px-0"
    >
      <div
        class="text-team-secondary flex flex-col justify-center items-center relative my-5"
      >
        <h1
          class="text-2xl md:text-4xl font-semibold pb-4 mb-5 border-b border-team-secondary"
        >
          {musing.text_plain}
        </h1>
        <div
          class="flex flex-wrap md:flex-nowrap items-center justify-center pb-5"
        >
          <p class="text-lg text-center md:text-left pr-5 m-auto">
            Download the StatMuse app and listen to your favorite players read
            out their own stats.
          </p>
          <a
            class="shrink-0"
            href="https://itunes.apple.com/us/app/statmuse/id1234654160?mt=8"
            data-track-click="Musing - Click App Store link"
          >
            <img
              class="h-10 mt-5 md:m-0"
              src="/ios-app-banner/app-store.png"
              alt="App Store"
            />
          </a>
        </div>
      </div>
      <div class="flex-1 flex items-end">
        <img
          class="w-full object-contain object-bottom"
          src={musing.image_url}
          alt={musing.question_text || 'player illustration'}
        />
      </div>
    </div>
    <footer
      class="flex items-center justify-center min-h-[100px] w-full border-t border-team-secondary"
    >
      <p class="text-team-secondary m-auto text-center p-2">
        StatMuse gives fans personalized stats, stories and original content
        narrated by more than 20 NFL player voices.
        <br />
        Available on{' '}
        <a
          class="text-inherit underline"
          href="https://itunes.apple.com/us/app/statmuse/id1234654160?mt=8"
        >
          iOS
        </a>
        ,{' '}
        <a
          class="text-inherit underline"
          href="https://www.statmuse.com/alexa/"
        >
          Alexa
        </a>
        , and{' '}
        <a class="text-inherit underline" href="https://labs.statmuse.com">
          web
        </a>
        .
      </p>
    </footer>
  </div>
</BaseLayout>
<script define:vars={{ id: musing.id, query: musing.question_text }}>
  window.segment.track('Musing - Web View', { id, text: query })

  const el = document.querySelector(
    '[data-track-click="Musing - Click App Store link"]'
  )
  el.addEventListener('click', () => {
    window.segment.track(el.dataset.trackClick, { id, text: query })
  })
</script>
