---
import { ask } from '@lib/gamera'
import { upsert } from '@statmuse/core/ask'
import * as Enforcer from '@lib/enforcer'
import { NOT_FOUND_404 } from '@lib/response'
import Answer from '@components/answer.astro'

let query: string | null | undefined = Astro.url.searchParams.get('q')
const league = Astro.url.searchParams.get('d')
let preferredDomain: string | undefined
let conversationToken: string | undefined

if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData()
  preferredDomain = data.get('question[preferred_domain]')?.toString()
  query = data.get('question[query]')?.toString()
  conversationToken = data.get('question[conversation_token]')?.toString()

  const canQuery = await Enforcer.canQuery(Astro.locals)
  if (!canQuery) {
    return Astro.redirect('/auth/signup?limit')
  }
}

if (!query) return Astro.redirect('/')

console.log('query input: ', query)
const askResponse = await ask(
  { query, preferredDomain, conversationToken, ...(league ? { league } : {}) },
  Astro,
)
if ('redirect' in askResponse) return Astro.redirect(askResponse.redirect)
const response = askResponse.response
if (!response) return NOT_FOUND_404

if (Astro.request.method === 'POST') {
  await upsert({
    query,
    response,
    visitorId: Astro.locals.visitor.id,
    userId: Astro.locals.user?.id,
  })
}
---

<Answer data={response} />
