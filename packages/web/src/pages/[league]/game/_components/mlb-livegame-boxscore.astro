---
import { getGames } from '@lib/gamera'
import Layout from './layout.astro'
import type { MlbGameDataResponse } from '@statmuse/core/gamera'
import { find } from 'lodash-es'
import GameInfo from './game-info.astro'
import Matchup from './matchup.svelte'
import PitchByPitch from './pitch-by-pitch.svelte'
import Linescore from './linescore.svelte'
import PlayByPlay from './play-by-play.svelte'
import LivegameHero from './livegame-hero.astro'

interface Props {
  gameData: MlbGameDataResponse
}

const { gameData } = Astro.props

const {
  networkName,
  awayTeam: awayTeamModel,
  homeTeam: homeTeamModel,
  teams,
  venue,
  weather,
  officials,
} = gameData

const [homeScores, awayScores] = await Promise.all([
  getGames({ context: Astro, domain: 'mlb', teamId: homeTeamModel.teamId }),
  getGames({ context: Astro, domain: 'mlb', teamId: awayTeamModel.teamId }),
])

const awayTeam = find(teams, { teamId: awayTeamModel.teamId })
const homeTeam = find(teams, { teamId: homeTeamModel.teamId })
---

<Layout {awayTeam} {homeTeam}>
  <LivegameHero
    slot="hero"
    network={networkName}
    {awayTeam}
    {awayScores}
    {homeTeam}
    {homeScores}
  />
  <Fragment slot="game">
    <Matchup client:load {awayTeam} {homeTeam} />
    <PitchByPitch client:load />
    <Linescore client:load {awayTeam} {homeTeam} />
    <PlayByPlay />
    <GameInfo {venue} {weather} {officials} />
  </Fragment>
</Layout>
