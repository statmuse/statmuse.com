---
import Image from '@components/image.astro'
import Panel from '@components/panel.astro'
import Timestamp from '@components/timestamp.svelte'
import {
  type Game,
  type GameraTeamReference,
  isCompletedGame,
  isScheduledGame,
  isInProgressGame,
} from '@statmuse/core/gamera'
import { findIndex, takeWhile, takeRightWhile, find } from 'lodash-es'

interface Props {
  teams: GameraTeamReference[]
  games?: Game[]
  currentGameId: number
}

const { teams, currentGameId } = Astro.props
let allGames = Astro.props.games

if (!allGames) return undefined

allGames = [...allGames].reverse()

const getAwayTeamId = (game: Game) =>
  isScheduledGame(game) ? game.awayTeamId : game.awayTeam.teamId
const getHomeTeamId = (game: Game) =>
  isScheduledGame(game) ? game.homeTeamId : game.homeTeam.teamId

let games: Game[] = []

let gameIndex = findIndex(allGames, (g) => g.gameId === currentGameId)

if (gameIndex !== -1) {
  const game = allGames[gameIndex]
  const awayTeamId = getAwayTeamId(game)
  const homeTeamId = getHomeTeamId(game)

  const sameTeams = (g: Game) =>
    [awayTeamId, homeTeamId].includes(getAwayTeamId(g)) &&
    [awayTeamId, homeTeamId].includes(getHomeTeamId(g))

  const beforeGames = takeRightWhile(allGames.slice(0, gameIndex), sameTeams)
  const afterGames = takeWhile(allGames.slice(gameIndex), sameTeams)

  games = games.concat(beforeGames).concat(afterGames)
}
---

<Panel class="pb-0" title="Current Series">
  <div class="divide-y divide-gray-6 dark:divide-gray-4">
    {
      games.map((game, index) => {
        const awayTeamId = getAwayTeamId(game)
        const homeTeamId = getHomeTeamId(game)
        const awayTeam = find(teams, { teamId: awayTeamId })
        const homeTeam = find(teams, { teamId: homeTeamId })

        if (isCompletedGame(game) || isInProgressGame(game)) {
          return (
            <div class="flex gap-3 py-2">
              <div class="flex-1">
                <div
                  class:list={{
                    'flex justify-between py-0.5': true,
                    'font-semibold':
                      isCompletedGame(game) &&
                      game.awayTeam.gameResult === 'win',
                  }}
                >
                  <div class="flex gap-1 items-center">
                    <Image
                      src={awayTeam?.logoImageUrl ?? ''}
                      alt={awayTeam?.name ?? ''}
                      width={60}
                      height={60}
                      class="w-5 h-5 object-contain"
                    />
                    <p>{awayTeam?.nickname}</p>
                  </div>
                  <p>{game.awayTeam.score}</p>
                </div>
                <div
                  class:list={{
                    'flex justify-between py-0.5': true,
                    'font-semibold':
                      isCompletedGame(game) &&
                      game.homeTeam.gameResult === 'win',
                  }}
                >
                  <div class="flex gap-1 items-center">
                    <Image
                      src={homeTeam?.logoImageUrl ?? ''}
                      alt={homeTeam?.name ?? ''}
                      width={60}
                      height={60}
                      class="w-5 h-5 object-contain"
                    />
                    <p>{homeTeam?.nickname}</p>
                  </div>
                  <p>{game.homeTeam.score}</p>
                </div>
              </div>
              <div class="w-16 flex items-center justify-end text-right text-sm text-gray-5">
                <div>
                  <p>Game {index + 1}</p>
                  {isCompletedGame(game) ? (
                    <p>Final</p>
                  ) : (
                    <p class="text-gray-8 bg-teal px-2 rounded-lg text-center w-fit">
                      Live
                    </p>
                  )}
                </div>
              </div>
            </div>
          )
        } else {
          return (
            <div class="flex gap-3 py-2">
              <div class="flex-1">
                <div class="flex gap-1 py-0.5">
                  <Image
                    src={awayTeam?.logoImageUrl ?? ''}
                    alt={awayTeam?.name ?? ''}
                    width={60}
                    height={60}
                    class="w-5 h-5 object-contain"
                  />
                  <p>{awayTeam?.nickname}</p>
                </div>
                <div class="flex gap-1 py-0.5">
                  <Image
                    src={homeTeam?.logoImageUrl ?? ''}
                    alt={homeTeam?.name ?? ''}
                    width={60}
                    height={60}
                    class="w-5 h-5 object-contain"
                  />
                  <p>{homeTeam?.nickname}</p>
                </div>
              </div>
              <div class="flex items-center justify-end text-right text-sm">
                <div>
                  <p>Game {index + 1}</p>
                  <p>
                    <Timestamp
                      client:only="svelte"
                      timestamp={game.gameTimestamp}
                    />
                  </p>
                </div>
              </div>
              <div class="w-16 flex items-center justify-end text-right text-sm text-gray-5">
                <p>
                  {homeTeam?.abbreviation}{' '}
                  {game.odds?.sportsbooks?.[0].homeTeam.spreadOdds.display}
                </p>
              </div>
            </div>
          )
        }
      })
    }
  </div>
</Panel>
