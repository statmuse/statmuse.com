---
import { getGames, getPlayByPlay, getStandingsRaw } from '@lib/gamera'
import Layout from './layout.astro'
import { type MlbGameDataResponse } from '@statmuse/core/gamera'
import { find } from 'lodash-es'
import PostgameHero from './postgame-hero.astro'
import GameInfo from './game-info.astro'
import Schedule from './schedule.astro'
import Standings from './standings.astro'
import Linescore from './linescore.svelte'
import PlayByPlay from './play-by-play.svelte'
import BattingStats from './batting-stats.svelte'
import PitchingStats from './pitching-stats.svelte'
import * as stores from './stores'

interface Props {
  gameData: MlbGameDataResponse
  gameId: string
}

const { gameData, gameId } = Astro.props

const {
  seasonYearDisplay: seasonYear,
  networkName,
  awayTeam: awayTeamModel,
  homeTeam: homeTeamModel,
  teams,
  venue,
  weather,
  officials,
  gameTimestamp,
} = gameData

const [awayGames, standings, playByPlay] = await Promise.all([
  getGames({
    context: Astro,
    domain: 'mlb',
    teamId: awayTeamModel.teamId,
    seasonYear,
    gameState: ['completed', 'inProgress', 'scheduled'],
  }),
  getStandingsRaw({ context: Astro, domain: 'mlb' }),
  getPlayByPlay({ context: Astro, gameId }),
])

stores.gameState.set({ gameData, playByPlay })

const awayTeam = find(teams, { teamId: awayTeamModel.teamId })
const homeTeam = find(teams, { teamId: homeTeamModel.teamId })
---

<Layout {awayTeam} {homeTeam}>
  <PostgameHero
    slot="hero"
    network={networkName}
    timestamp={gameTimestamp}
    {awayTeam}
    awayRecord={awayTeamModel.record}
    {homeTeam}
    homeRecord={homeTeamModel.record}
  />
  <Fragment slot="game">
    <Linescore {awayTeam} {homeTeam} final />
    <PlayByPlay {awayTeam} {homeTeam} scoring />
    <Schedule
      {teams}
      currentGameId={Number.parseInt(gameId)}
      games={awayGames?.games}
    />
    <Standings
      {standings}
      awayTeamId={awayTeamModel.teamId}
      homeTeamId={homeTeamModel.teamId}
    />
    <GameInfo {venue} {weather} {officials} />
  </Fragment>
  <Fragment slot="away">
    <BattingStats teamKey="away" />
    <PitchingStats teamKey="away" />
  </Fragment>
  <Fragment slot="home">
    <BattingStats teamKey="home" />
    <PitchingStats teamKey="home" />
  </Fragment>
  <PlayByPlay slot="plays" {awayTeam} {homeTeam} />
</Layout>
