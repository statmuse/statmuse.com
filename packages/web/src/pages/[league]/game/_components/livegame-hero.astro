---
import Inning from './inning.svelte'
import Share from '@components/share/index.svelte'
import { hexToHSL } from '@lib/color'
import Image from '@components/image.astro'
import type { CompletedGame, GameraTeamReference } from '@statmuse/core/gamera'
import Score from './score.svelte'
import Panel from '@components/panel.astro'
import EntityLink from '@components/entity-link.astro'

interface Props {
  network: string
  awayTeam?: GameraTeamReference
  homeTeam?: GameraTeamReference
  awayTeamGames?: CompletedGame[]
  homeTeamGames?: CompletedGame[]
}

const getTeamFromGameResult = (teamId?: number, game?: CompletedGame) => {
  return game?.awayTeam.teamId === teamId
    ? game?.awayTeam
    : game?.homeTeam.teamId === teamId
    ? game?.homeTeam
    : undefined
}

const { network, awayTeam, homeTeam, awayTeamGames, homeTeamGames } =
  Astro.props

const awayTeamRecord = getTeamFromGameResult(
  awayTeam?.teamId,
  awayTeamGames?.[0],
)?.record
const homeTeamRecord = getTeamFromGameResult(
  homeTeam?.teamId,
  homeTeamGames?.[0],
)?.record
---

<Panel
  class:list={{
    '!p-0 -mx-3 md:mx-0': true,
    'rounded-none border-0 md:rounded-2xl': true,
    '!bg-gray-7 dark:!bg-gray-2 md:!bg-gray-8 md:dark:!bg-gray-3': true,
  }}
>
  <div class="h-[45px] flex px-3 py-2 justify-center relative">
    <p class="text-gray-5 absolute left-3 top-2">{network}</p>
    <Inning client:load />
    <div class="absolute right-3 top-2">
      <Share />
    </div>
  </div>
  <div class="flex h-20 overflow-clip">
    <div
      class="flex-1 flex relative justify-end text-right"
      style={{
        background: hexToHSL(awayTeam?.colors?.backgroundColor ?? '', 0.2),
        color: awayTeam?.colors?.foregroundColor,
      }}
    >
      <Image
        src={awayTeam?.logoImageUrl ?? ''}
        alt={awayTeam?.name ?? ''}
        width={140}
        height={140}
        class="absolute left-0 h-full object-contain -translate-x-1/2"
      />
      <div class="px-3 flex flex-col justify-center leading-none">
        <EntityLink
          entity={awayTeam?.entity}
          class="text-inherit hover:no-underline group/link"
        >
          <h4 class="font-semibold text-lg">
            {
              awayTeamRecord && (
                <span class="text-sm font-normal">{`${awayTeamRecord.wins}-${awayTeamRecord.losses}`}</span>
              )
            }{' '}<span class="group-hover/link:underline">
              {awayTeam?.abbreviation}
            </span>
          </h4>
        </EntityLink>
        <p class="text-2xl"><Score client:load teamKey="away" /></p>
      </div>
    </div>
    <div
      class="flex-1 flex relative"
      style={{
        background: hexToHSL(homeTeam?.colors?.backgroundColor ?? '', 0.2),
        color: homeTeam?.colors?.foregroundColor,
      }}
    >
      <Image
        src={homeTeam?.logoImageUrl ?? ''}
        alt={homeTeam?.name ?? ''}
        width={140}
        height={140}
        class="absolute right-0 h-full object-contain translate-x-1/2"
      />
      <div class="px-3 flex flex-col justify-center leading-none">
        <EntityLink
          entity={homeTeam?.entity}
          class="text-inherit hover:no-underline group/link"
        >
          <h4 class="font-semibold text-lg">
            <span class="group-hover/link:underline">
              {homeTeam?.abbreviation}
            </span>{' '}{
              homeTeamRecord && (
                <span class="text-sm font-normal">{`${homeTeamRecord.wins}-${homeTeamRecord.losses}`}</span>
              )
            }
          </h4>
        </EntityLink>
        <p class="text-2xl"><Score client:load teamKey="home" /></p>
      </div>
    </div>
  </div>
  <slot />
</Panel>
