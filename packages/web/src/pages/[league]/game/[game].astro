---
import GameLayout from '@layouts/game.astro'

import { getGame } from '@lib/game'
import type { GameraDomain } from '@statmuse/core/gamera'
import NbaBoxscore from '@components/nba-boxscore.astro'
import NflBoxscore from '@components/nfl-boxscore.astro'
import MlbBoxscore from '@components/mlb-boxscore.astro'
import NhlBoxscore from '@components/nhl-boxscore.astro'
import { Caching } from '@lib/caching'

const { league, game } = Astro.params
if (!game || !league) {
  return new Response(null, { status: 404, statusText: 'Not found' })
}

const domain = league.toUpperCase() as GameraDomain
const data = await getGame({ domain, game })
if (!data) {
  return new Response(null, { status: 404, statusText: 'Not found' })
}

Caching.swr(Astro)
---

<GameLayout {data}>
  {
    (function () {
      switch (data.domain) {
        case 'NBA':
          return <NbaBoxscore {data} />
        case 'NFL':
          return <NflBoxscore {data} />
        case 'MLB':
          return <MlbBoxscore {data} />
        case 'NHL':
          return <NhlBoxscore {data} />
        default:
          throw new Error('cannot render a boxscore for PGA')
      }
    })()
  }
</GameLayout>
