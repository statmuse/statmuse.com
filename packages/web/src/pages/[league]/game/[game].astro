---
import Layout from '@layouts/base.astro'
import GameLayout from '@layouts/game.astro'
import NbaBoxscore from '@components/nba-boxscore.astro'
import NflBoxscore from '@components/nfl-boxscore.astro'
import NhlBoxscore from '@components/nhl-boxscore.astro'
import EplBoxscore from '@components/epl-boxscore.astro'
import MlbBoxscore from '@components/boxscores/mlb/mlb-boxscore.astro'
import { Caching } from '@lib/caching'
import { getGame } from '@lib/gamera'
import { NOT_FOUND_404 } from '@lib/response'
import { type LeagueParam, leagueToDomain } from '@lib/params'
import Visuals from '@components/visuals.astro'
import Hero from '@components/hero.astro'
import { getHeroProps } from '@lib/gamera'

const league = Astro.params.league as LeagueParam
const game = Astro.params.game
if (!game || !league) return NOT_FOUND_404

const domain = leagueToDomain(league)
const data =
  domain !== 'MLB' ? await getGame({ context: Astro, domain, game }) : undefined
if (!data && domain !== 'MLB') return NOT_FOUND_404
if (data?.type === 'error') return NOT_FOUND_404

Caching.swr(Astro)
---

{
  domain === 'MLB' ? (
    // New Boxscores
    <MlbBoxscore />
  ) : domain === 'CFB' ? (
    <Layout colors={data?.visual.summary.subject.colors}>
      <Hero
        class="@lg/hero:pr-12"
        {...getHeroProps({ imageAlt: '', response: data })}
        renderAdBanner
      />
      <Visuals response={data} />
    </Layout>
  ) : (
    <GameLayout {data} {domain}>
      {(function () {
        switch (data.domain) {
          case 'NBA':
            return <NbaBoxscore {data} />
          case 'NFL':
            return <NflBoxscore {data} />
          case 'NHL':
            return <NhlBoxscore {data} />
          case 'EPL':
            return <EplBoxscore {data} />
          default:
            throw new Error('cannot render a boxscore for PGA')
        }
      })()}
    </GameLayout>
  )
}
