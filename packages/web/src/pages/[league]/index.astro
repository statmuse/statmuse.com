---
import HomeLayout from '@layouts/home.astro'
import Panel from '@components/panel.astro'
import { Caching } from '@lib/caching'
import { createAskPath } from '@statmuse/core/path'
import { NOT_FOUND_404 } from '@lib/response'
import { leagueToDomain, type LeagueParam } from '@lib/params'
import { listLatestMusings, type LatestMusing } from '@statmuse/core/musing'
import MusingsCard from '@components/home/musings-card.astro'
import {
  homeLeadersByDomain,
  homeRankingsByDomain,
  homeBettingByDomain,
} from '@lib/related-content'
import { getTrendingData } from '@lib/trending'
import { find } from 'lodash-es'
import TrendingList from '@components/trending-list.astro'
import { getStandings } from '@lib/standings'
import type { GameraPlayerProfileResponse } from '@statmuse/core/gamera'
import { getPlayerProfile } from '@lib/player'
import PlayerPerformanceCard from '@components/player/performance-card.astro'
import RankingCard from '@components/home/ranking-card.astro'
import Standings from '@components/home/standings.astro'
import type { TrendingItem } from 'src/types'
import AditudeAdBanner from '@components/aditude-ad-banner.svelte'

const leaguePaths = ['nba', 'nfl', 'mlb', 'nhl', 'pga', 'fc']
if (!Astro.params.league || !leaguePaths.includes(Astro.params.league))
  return NOT_FOUND_404

const league = Astro.params.league as LeagueParam

const nbaExamples = [
  [
    'Scores',
    [
      'Did the Warriors win?',
      'Who won the Finals last year?',
      'What was the score of the last Pacers game?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nba', query: q }),
    })),
  ],
  [
    'Schedules',
    [
      'Who do the Cavs play this week?',
      'What channel is the Raptors game on?',
      'When do the Spurs play next?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nba', query: q }),
    })),
  ],
  [
    'Standings',
    [
      'Are the Sixers in the playoffs?',
      'Western Conference standings this season?',
      'Who leads the East?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nba', query: q }),
    })),
  ],
  [
    'Stats',
    [
      'Lowest defensive rating by a team this season?',
      'Who had the most points in a game last season?',
      'Which team has the most threes in a playoff game?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nba', query: q }),
    })),
  ],
  [
    'Bios',
    [
      'How tall is Giannis?',
      'Where did Kyrie Irving go to college?',
      'Tell me about Larry Bird',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nba', query: q }),
    })),
  ],
  [
    'Recaps',
    [
      'How did Jokic do?',
      'Is Ja Morant having a good season this year?',
      'How did MJ do in his rookie season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nba', query: q }),
    })),
  ],
  [
    'Odds',
    ['NBA odds', 'Who are the favorites tonight?', 'Lakers over/under'].map(
      (q) => ({
        query: q,
        path: createAskPath({ domain: 'nba', query: q }),
      }),
    ),
  ],
  [
    'Beyond the Box Score',
    [
      "What is Steph Curry's career true shooting percentage?",
      'Who had the most DraftKings points in the last playoffs?',
      'Kevin Durant shot chart in 2013-14?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nba', query: q }),
    })),
  ],
]

const nflExamples = [
  [
    'Scores',
    [
      'Did the Eagles win?',
      'Who won the first Super Bowl?',
      'What was the score of the last Saints game?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nfl', query: q }),
    })),
  ],
  [
    'Schedules',
    [
      'Who do the Chiefs play this week?',
      'What channel is the Super Bowl on?',
      'When do the Rams play next?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nfl', query: q }),
    })),
  ],
  [
    'Standings',
    [
      "What is the Carolina Panthers' record?",
      'Which team had the best record in the NFC East last season?',
      'Did the Ravens make the playoffs?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nfl', query: q }),
    })),
  ],
  [
    'Stats',
    [
      'Who has the most touchdowns?',
      'Which team has the most two-point conversions this season?',
      'Which QB has the most passing yards in a playoff game?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nfl', query: q }),
    })),
  ],
  [
    'Bios',
    [
      'Tell me about the 49ers',
      'Where did Peyton Manning go to college?',
      'Dan Marino career stats?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nfl', query: q }),
    })),
  ],
  [
    'Recaps',
    [
      'How did Justin Jefferson do?',
      'Did Justin Herbert have a good season last year?',
      'How did Randy Moss do in his rookie season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nfl', query: q }),
    })),
  ],
  [
    'Odds',
    ['NFL odds', 'Who are the favorites this week?', 'Chiefs spread'].map(
      (q) => ({
        query: q,
        path: createAskPath({ domain: 'nfl', query: q }),
      }),
    ),
  ],
  [
    'Beyond the Box Score',
    [
      'Which team has the most career ties in the NFL?',
      'Who had the most DraftKings points in the last playoffs?',
      'Which team had the most third down conversions last season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nfl', query: q }),
    })),
  ],
]

const mlbExamples = [
  [
    'Scores',
    [
      'Did the Giants win?',
      'Which team has won the most World Series?',
      'Who won the World Series last year?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'mlb', query: q }),
    })),
  ],
  [
    'Schedules',
    [
      'When is the next Athletics home game?',
      'What channel is the Mariners game on?',
      'When do the Dodgers play the Giants next?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'mlb', query: q }),
    })),
  ],
  [
    'Standings',
    [
      "What is the Cubs' record?",
      "What was the White Sox' record last season?",
      'Who had the best record in the American League last season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'mlb', query: q }),
    })),
  ],
  [
    'Stats',
    [
      'Which pitcher has the most strikeouts this season?',
      'Which team had the most home runs in a season?',
      'Who has the most RBI in a World Series?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'mlb', query: q }),
    })),
  ],
  [
    'Bios',
    [
      'How tall was Randy Johnson?',
      'How much does Bartolo Colon weigh?',
      "What are Babe Ruth's career stats?",
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'mlb', query: q }),
    })),
  ],
  [
    'Recaps',
    [
      'How did Shohei do?',
      'How did the Blue Jays do last season?',
      'How did Jose Altuve do in his rookie season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'mlb', query: q }),
    })),
  ],
  [
    'Odds',
    ['MLB odds', 'Who are the favorites tonight?', 'Red Sox moneyline'].map(
      (q) => ({
        query: q,
        path: createAskPath({ domain: 'mlb', query: q }),
      }),
    ),
  ],
  [
    'Beyond the Box Score',
    [
      'Who has the highest wRC+ in a season?',
      'Which pitcher has the highest career strikeouts per nine innings?',
      'Who has the highest weighted on base percentage in a season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'mlb', query: q }),
    })),
  ],
]

const nhlExamples = [
  [
    'Scores',
    [
      'Did the Golden Knights win?',
      'Who won the Stanley Cup last season?',
      'What happened in the Predators game?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nhl', query: q }),
    })),
  ],
  [
    'Schedules',
    [
      'What NHL games are there tonight?',
      'What channel is the Avalanche game on?',
      'When do the Sharks play next?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nhl', query: q }),
    })),
  ],
  [
    'Standings',
    [
      "What is the Carolina Hurricanes' record?",
      'What place are the Ducks in?',
      "What is the Devils' best record in a season?",
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nhl', query: q }),
    })),
  ],
  [
    'Stats',
    [
      'Who leads the NHL in points?',
      'Which team had the most power play points this season?',
      'Who had the most assists in a season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nhl', query: q }),
    })),
  ],
  [
    'Bios',
    [
      'How old is Matty Beniers?',
      'How tall is Wayne Gretzky?',
      "What are Mario Lemieux's career stats?",
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nhl', query: q }),
    })),
  ],
  [
    'Recaps',
    [
      'Tell me about Gordie Howe',
      'Did Tyler Seguin have a good season this year?',
      'How did Sidney Crosby do in his rookie season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nhl', query: q }),
    })),
  ],
  [
    'Odds',
    ['NHL odds', 'Who are the favorites tonight?', 'Maple Leafs moneyline'].map(
      (q) => ({
        query: q,
        path: createAskPath({ domain: 'nhl', query: q }),
      }),
    ),
  ],
  [
    'Beyond the Box Score',
    [
      'Which team has the highest faceoff win percentage this season?',
      'Which team has the highest penalty kill percentage in a season in the playoffs with at least 8 games played?',
      'Who had the most game winning goals in a season in the playoffs?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'nhl', query: q }),
    })),
  ],
]

const pgaExamples = [
  [
    'Scores',
    [
      'Who won the Masters last year?',
      'Who won the PGA Championship in 1980?',
      'Who won the US Open in 2000?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'pga', query: q }),
    })),
  ],
  [
    'Schedules',
    [
      'What is the PGA schedule?',
      'When is the next US Open?',
      'When is the next Masters?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'pga', query: q }),
    })),
  ],
  [
    'Standings',
    [
      'FedEx Cup rankings in 2013?',
      '2016 Masters standings',
      'Who led the FedEx rankings last year?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'pga', query: q }),
    })),
  ],
  [
    'Stats',
    [
      'Who won the most tournaments in 2000?',
      'Who had the best putting average last season?',
      "What was Tiger's FWY% in 2003?",
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'pga', query: q }),
    })),
  ],
  [
    'Bios',
    [
      'How old is Phil Mickelson?',
      'Tiger Woods career stats',
      'Tell me about Rory McIlroy',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'pga', query: q }),
    })),
  ],
  [
    'Recaps',
    [
      'How did Tiger Woods do in 2000?',
      'Did Justin Thomas have a good season last year?',
      'How did Jordan Spieth do in his first season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'pga', query: q }),
    })),
  ],
  [
    'Beyond the Box Score',
    [
      'Who had the best driving distance average in a season, minimum 80 events?',
      'Who was the last player with at least 70 gir% in a season when winning at least 5 tournaments?',
      'When was the last time Tiger had 70 GIR% and 70 FWY% in a season?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'pga', query: q }),
    })),
  ],
]

const eplExamples = [
  [
    'Scores',
    [
      'Arsenal record vs the Big 6 this season',
      'What was the score of the last Man United vs Man City match?',
      'What was the score of the last Manchester derby?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'fc', query: q }),
    })),
  ],
  [
    'Fixtures',
    [
      'What matches are on this week?',
      'When is the next North West derby?',
      'When do Tottenham play next?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'fc', query: q }),
    })),
  ],
  [
    'Table',
    [
      'Premier League table?',
      'Who won the Premier League last season?',
      "What was Liverpool's record last year?",
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'fc', query: q }),
    })),
  ],
  [
    'Stats',
    [
      'Who scored the most goals in a season?',
      'Who has the most hat tricks all time?',
      'Which team leads the league in passes per match?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'fc', query: q }),
    })),
  ],
  [
    'Bios',
    [
      'Tell me about Thierry Henry',
      'How tall is Peter Crouch?',
      'How old is Bukayo Saka?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'fc', query: q }),
    })),
  ],
  [
    'Recaps',
    [
      'How did Cristiano Ronaldo do in 2007-08 season?',
      'How is Haaland doing?',
      'Did Son Heung-Min have a good season last year?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'fc', query: q }),
    })),
  ],
  [
    'Beyond the Box Score',
    [
      'Who has the most touches in opponent box this season?',
      'Who leads the league in big chances created?',
      'Which player has the most passes in the final third last year?',
    ].map((q) => ({
      query: q,
      path: createAskPath({ domain: 'fc', query: q }),
    })),
  ],
]

type ExampleSet = [string, { query: string; path: string }[]]

const examples = {
  nba: nbaExamples as ExampleSet[],
  nfl: nflExamples as ExampleSet[],
  mlb: mlbExamples as ExampleSet[],
  nhl: nhlExamples as ExampleSet[],
  pga: pgaExamples as ExampleSet[],
  fc: eplExamples as ExampleSet[],
  money: eplExamples as ExampleSet[],
}

const meta = {
  title: `${league === 'fc' ? 'Premier League' : league.toUpperCase()} Stats`,
  description:
    league === 'fc' || league === 'pga'
      ? `Instant answers to your ${
          league === 'pga' ? league.toUpperCase() : 'Premier League'
        } questions. Stats, scores, bios, records and more — just ask.`
      : `Instant answers to your ${league.toUpperCase()} questions. Stats, scores, bios, records, odds and more — just ask.`,
  facebook: {
    imageUrl:
      league === 'fc'
        ? `${Astro.url.origin}/images/sm-fc-meta-banner.jpg`
        : undefined,
  },
  twitter: {
    imageUrl:
      league === 'fc'
        ? `${Astro.url.origin}/images/sm-fc-meta-banner.jpg`
        : undefined,
  },
}

const domain = leagueToDomain(league)

let musings: LatestMusing[] | undefined
let leaders: Awaited<ReturnType<typeof homeLeadersByDomain>>
let rankings: Awaited<ReturnType<typeof homeRankingsByDomain>>
let trendingSearches: TrendingItem['datasets'][number] | undefined
let trendingPlayers: TrendingItem['datasets'][number] | undefined
let trendingTeams: TrendingItem['datasets'][number] | undefined
let betting: Awaited<ReturnType<typeof homeBettingByDomain>>
let standings: Awaited<ReturnType<typeof getStandings>>
let profile: GameraPlayerProfileResponse | undefined

if (domain !== 'PGA') {
  musings = await listLatestMusings(domain)

  leaders = await homeLeadersByDomain({ context: Astro, domain })

  rankings = await homeRankingsByDomain({ context: Astro, domain })

  const data = await getTrendingData({ league })

  trendingSearches = find(data.datasets, { name: 'Searches' })
  trendingPlayers = find(data.datasets, { name: 'Players' })
  trendingTeams = find(data.datasets, { name: 'Teams' })

  betting = await homeBettingByDomain({ context: Astro, domain })

  standings = await getStandings({ context: Astro, domain })

  for (const player of trendingPlayers?.items.slice(0, 10) ?? []) {
    const playerSlug = player.uri.split('/')[3]
    profile = await getPlayerProfile(Astro, domain, playerSlug)
    if (profile?.recentGames) break
  }
}

Caching.swr(Astro)
---

<HomeLayout {meta} {league}>
  <div class="flex gap-3">
    <div class="flex-1 group">
      {
        domain !== 'PGA' ? (
          <>
            <div class="flex lg:hidden font-semibold text-center mb-3">
              <label
                for="story"
                class="flex-1 py-2 text-gray-5 bg-gray-4 rounded-tl-2xl hover:cursor-pointer group-has-[#story:checked]:bg-gray-3 group-has-[#story:checked]:text-white"
              >
                Stories
              </label>
              <label
                for="summary"
                class="flex-1 py-2 text-gray-5 bg-gray-4 rounded-tr-2xl hover:cursor-pointer group-has-[#summary:checked]:bg-gray-3 group-has-[#summary:checked]:text-white"
              >
                Summary
              </label>
            </div>
            <div class="flex gap-3">
              <div class="hidden has-[#story:checked]:block lg:block flex-1">
                <input
                  class="absolute opacity-0"
                  type="radio"
                  name="home"
                  id="story"
                  checked
                />
                {musings && (
                  <div class="space-y-3">
                    {musings.map(async (musing, i) => (
                      <MusingsCard {musing} index={i} />
                    ))}
                  </div>
                )}
              </div>
              <div class="hidden has-[#summary:checked]:block lg:block flex-1">
                <input
                  class="absolute opacity-0"
                  type="radio"
                  name="home"
                  id="summary"
                />
                <div class="space-y-3">
                  {profile && (
                    <PlayerPerformanceCard
                      {domain}
                      bio={profile?.bio}
                      recentGames={profile?.recentGames}
                    />
                  )}
                  {leaders && (
                    <RankingCard
                      title="League Leaders"
                      sections={leaders.map((leader) => ({
                        title: leader.title,
                        items: leader.players.map((player) => ({
                          display: player.usedName,
                          stat: player.statDisplayValue,
                          imageUrl: player.imageUrl,
                          entity: player.entity,
                          colors: player.colors,
                        })),
                      }))}
                    />
                  )}
                  {rankings && (
                    <RankingCard
                      title="League Rankings"
                      sections={rankings.map((ranking) => ({
                        title: ranking.title,
                        items: ranking.teams.map((team) => ({
                          display: team.name,
                          stat: team.statDisplayValue,
                          imageUrl: team.logoImageUrl,
                          entity: team.entity,
                          colors: team.colors,
                        })),
                      }))}
                    />
                  )}
                  {standings && <Standings {standings} {domain} />}
                  {betting && (
                    <RankingCard
                      title="Betting Trends"
                      sections={betting.map((section) => ({
                        title: section.title,
                        items: section.teams.map((team) => ({
                          display: team.name,
                          stat: team.statDisplayValue,
                          imageUrl: team.logoImageUrl,
                          entity: team.entity,
                          colors: team.colors,
                        })),
                      }))}
                    />
                  )}
                  {trendingPlayers && (
                    <TrendingList
                      title={`Trending ${trendingPlayers.name}`}
                      items={trendingPlayers.items}
                    />
                  )}
                  {trendingTeams && (
                    <TrendingList
                      title={`Trending ${trendingTeams.name}`}
                      items={trendingTeams.items}
                    />
                  )}
                  {trendingSearches && (
                    <TrendingList
                      title={`Trending ${trendingSearches.name}`}
                      items={trendingSearches.items}
                    />
                  )}
                  <Panel title="Example Questions">
                    <div class="divide-y divide-gray-6 dark:divide-gray-4">
                      {examples[league || 'nba'].map(([title, queries]) => (
                        <div class="-mx-3 px-3">
                          <p class="text-sm text-gray-5">{title}</p>
                          <ul class="flex flex-col mb-2">
                            {queries.map(({ query, path }) => (
                              <li class="max-w-xs">
                                <a href={path} class="text-pretty text-inherit">
                                  {query}
                                </a>
                              </li>
                            ))}
                          </ul>
                        </div>
                      ))}
                    </div>
                  </Panel>
                </div>
              </div>
            </div>
          </>
        ) : (
          <div class="gap-3 space-y-3 columns-2xs">
            {examples[league || 'nba'].map(([title, queries]) => (
              <Panel {title} class="break-inside-avoid-column">
                <ul class="flex flex-col gap-2">
                  {queries.map(({ query, path }) => (
                    <li class="max-w-xs">
                      <a href={path} class="text-pretty">
                        {query}
                      </a>
                    </li>
                  ))}
                </ul>
              </Panel>
            ))}
          </div>
        )
      }
    </div>
    <div class="hidden md:block basis-[300px]">
      <AditudeAdBanner
        client:only="svelte"
        divId="pb-slot-right-2"
        slotId="pb-slot-right-2"
        class="w-[300px] h-[600px]"
      />
    </div>
  </div>
</HomeLayout>
