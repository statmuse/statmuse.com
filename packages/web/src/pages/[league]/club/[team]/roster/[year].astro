---
import TeamLayout from '@layouts/team.astro'
import Grid from '@components/grid.astro'

import { getUrlForEntity, type GameraDomain } from '@statmuse/core/gamera'
import { getTeamSeasonBio, getTeamSeasonRoster } from '@lib/team'
import { getLeagueKeywords } from '@lib/meta'
import { Caching } from '@lib/caching'
import { NOT_FOUND_404 } from '@lib/response'

const { league, team, year } = Astro.params
if (!team || !league || !year) return NOT_FOUND_404

const domain = league.toUpperCase() as GameraDomain
const bio = await getTeamSeasonBio({ context: Astro, domain, team, year })
const roster = await getTeamSeasonRoster({ context: Astro, domain, team, year })
if (!bio || !roster) return NOT_FOUND_404

if (!bio.hasRoster) {
  return Astro.redirect(`/${league}/club/${team}/fixtures/${year}`)
}

const title = `${bio.name} ${year} Roster`
const description = `The ${year} ${bio.name} roster for the premier league season`
const keywords = `${getLeagueKeywords(domain)} ${year} ${
  bio.name
} club roster stats statistics`
const canonical = {
  url: `${getUrlForEntity({
    type: 'teamSeason',
    domain: 'epl',
    id: bio.teamId.toString(),
    display: bio.name,
  })}/roster/${year}`,
  rewrite: true,
}
const meta = { title, description, keywords, canonical }

Caching.swr(Astro)
---

<TeamLayout {bio} {meta} page="roster">
  <div class="mb-5">
    {
      roster?.grid && (
        <Grid
          data={roster?.grid}
          columnStyles={{ 'NO.': 'text-left' }}
          columnHeaderStyles={{ NAME: 'pl-10' }}
        />
      )
    }
  </div>
</TeamLayout>
