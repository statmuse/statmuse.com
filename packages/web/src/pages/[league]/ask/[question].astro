---
import Layout from '@layouts/main.astro'
import Header from '@components/header.astro'
import Hero from '@components/hero.astro'
import Visuals from '@components/visuals.astro'
import { handleResponse, tokensToText } from '@statmuse/core/gamera'
import { ask, getHeroProps } from '@lib/gamera'
import { description, title } from '@lib/meta'
import { clean, imageForgeUrl } from '@lib/path'

const { league, question } = Astro.params
if (!question) return Astro.redirect('/questions')
let query = question.replaceAll('-', ' ')
const response = await ask({ league, query })
if (!response)
  return new Response(null, { status: 404, statusText: 'Not found' })
const { subject, redirectUrl, conversationToken } = handleResponse(response)
if (redirectUrl) return Astro.redirect(redirectUrl)

const heroProps = getHeroProps({ imageAlt: query, response })
query = clean(
  tokensToText(
    response.visual.summaryTokens.filter((t) => t.type !== 'inferred')
  )
)

const meta = {
  title: title(query),
  description: description(response),
  facebook: {
    imageUrl: imageForgeUrl({
      url: heroProps?.imageUrl || '',
      bgColor: subject.colors.background,
      type: 'facebook',
    }),
  },
  twitter: {
    imageUrl: imageForgeUrl({
      url: heroProps?.imageUrl || '',
      bgColor: subject.colors.background,
      type: 'twitter',
    }),
  },
}
---

<Layout {meta} colors={subject?.colors}>
  <Header
    {query}
    {conversationToken}
    preferredDomain={league}
    share={{ type: 'ask', shortCode: 'CODE', url: Astro.url.href }}
  />
  {heroProps ? <Hero {...heroProps} /> : null}
  <Visuals {response} />
</Layout>
