---
import Answer from '@components/answer.astro'
import {
  type GameraDefaultResponse,
  handleResponse,
} from '@statmuse/core/gamera'
import { ask } from '@lib/gamera'
import { Caching } from '@lib/caching'
import * as Enforcer from '@lib/enforcer'
import { NOT_FOUND_404 } from '@lib/response'
import { type LeagueParam, leagueToDomain } from '@lib/params'

const league = Astro.params.league as LeagueParam
const domain = leagueToDomain(league).toLowerCase()
const canQuery = await Enforcer.canQuery(Astro.locals, domain)
if (!canQuery && domain === 'epl') {
  return Astro.redirect('/auth/signup?fc')
}
if (!canQuery) {
  return Astro.redirect('/auth/signup?limit')
}

const question = Astro.url.searchParams.get('q')
if (!question) return Astro.redirect('/questions')

const response = (await ask({ query: question, league: domain }, Astro)) as
  | GameraDefaultResponse
  | undefined
if (!response) return NOT_FOUND_404

const { redirectUrl } = handleResponse(response)
if (redirectUrl) return Astro.redirect(redirectUrl)

Caching.swr(Astro)
---

<Answer data={response} />
