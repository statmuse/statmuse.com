---
import Answer from '@components/answer.astro'
import { handleResponse } from '@statmuse/core/gamera'
import { ask } from '@lib/gamera'
import { Caching } from '@lib/caching'
import * as Enforcer from '@lib/enforcer'
import { NOT_FOUND_404 } from '@lib/response'
import { leagueToDomain, type LeagueParam } from '@lib/params'

const league = Astro.params.league as LeagueParam
const domain = leagueToDomain(league).toLowerCase()
const canQuery = await Enforcer.canQuery(Astro.locals)
if (!canQuery) {
  return Astro.redirect('/auth/signup?limit')
}

const replaceHyphens = !!Astro.params.question
const question = Astro.params.question ?? Astro.url.searchParams.get('q')
if (!question) return Astro.redirect('/questions')
const query = replaceHyphens ? question.replaceAll('-', ' ') : question

const askResponse = await ask({ league: domain, query }, Astro)
if ('redirect' in askResponse) return Astro.redirect(askResponse.redirect)
const response = askResponse.response
if (!response) return NOT_FOUND_404

const { redirectUrl } = handleResponse(response)
if (redirectUrl) return Astro.redirect(encodeURI(redirectUrl))

Caching.swr(Astro)
---

<Answer data={response} />
