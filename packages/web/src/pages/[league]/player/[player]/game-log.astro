---
import PlayerLayout from '@layouts/player.astro'
import Grid from '@components/grid.astro'
import type { GameraDomain } from '@statmuse/core/gamera'
import { getPlayerBio, getPlayerGameLog } from '@lib/player'
import { getLeagueKeywords } from '@lib/meta'
import { Caching } from '@lib/caching'

const { league, player } = Astro.params
if (!player || !league) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found',
  })
}

const domain = league.toUpperCase() as GameraDomain
const params = Astro.url.searchParams
const stats = await getPlayerGameLog({
  context: Astro,
  domain,
  player,
  params,
})
const bio = await getPlayerBio(Astro, domain, player)
if (!stats || !bio) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found',
  })
}

const { grids, parameters } = stats
const leagueKeywords = getLeagueKeywords(domain)
const seasonYear = Astro.url.searchParams.get('seasonYear')
const year = seasonYear ? ` ${seasonYear}` : ''

const title = [bio.usedName, year?.trim(), 'Game Log']
  .filter((w) => !!w)
  .join(' ')
const description = `${bio.usedName}'s game log for the${year} ${domain} regular season and playoffs`
const keywords = `${leagueKeywords} ${bio.usedName}${year} game log stats statistics`
const meta = { title, description, keywords }

Caching.swr(Astro)
---

<PlayerLayout {league} {bio} {meta} page="game-log">
  <div>
    {
      grids &&
        grids.map((grid) => (
          <Grid
            class="mb-5"
            data={grid}
            columnStyles={{ DATE: 'text-left w-20', SCORE: 'text-left' }}
            {parameters}
          />
        ))
    }
  </div>
</PlayerLayout>
