---
import TeamLayout from '@layouts/team.astro'
import Grid from '@components/grid.astro'

import { GameraDomain, tokensToText } from '@lib/gamera'
import {
  getTeamSeasonBio,
  getTeamSeasonStats,
  getTeamSeasonPlayerStats,
} from '@lib/team'
import { getLeagueKeywords } from '@lib/meta'

const { league, team, year } = Astro.params
if (!team || !league || !year) {
  return new Response(null, { status: 404, statusText: 'Not found' })
}

const params = Astro.url.searchParams
const domain = league.toUpperCase() as GameraDomain
const bio = await getTeamSeasonBio({ domain, team, year })
const stats = await getTeamSeasonStats({ domain, team, year, params })
const playerStats = await getTeamSeasonPlayerStats({
  domain,
  team,
  year,
  params,
})

const [regularSeasonTeamStats, playoffTeamStats] = stats.grids
const [regularSeasonPlayerStats, playoffPlayerStats] = playerStats.grids

const title = `${bio.name} Overview`
const description = bio.summaryNlg ? tokensToText(bio.summaryNlg) : undefined
const keywords = `${getLeagueKeywords(domain)} ${
  bio.name
} career stats statistics`
const meta = { title, description, keywords }
---

<TeamLayout {bio} {meta}>
  <div>
    {
      regularSeasonTeamStats && (
        <Grid
          class="mb-5"
          data={regularSeasonTeamStats}
          parameters={stats.parameters}
        />
      )
    }
    {
      regularSeasonPlayerStats && (
        <Grid
          class="mb-5"
          data={regularSeasonPlayerStats}
          parameters={stats.parameters}
        />
      )
    }
    {
      playoffTeamStats && (
        <Grid
          class="mb-5"
          data={playoffTeamStats}
          parameters={stats.parameters}
        />
      )
    }
    {
      playoffPlayerStats && (
        <Grid
          class="mb-5"
          data={playoffPlayerStats}
          parameters={stats.parameters}
        />
      )
    }
  </div>
</TeamLayout>
