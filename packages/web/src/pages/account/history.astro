---
import Layout from '@layouts/base.astro'
import { getUserAsks, getFinanceUserAsks } from '@statmuse/core/ask'
import { ASK_LIMIT } from '@statmuse/core/ask'
import { formatDate } from '@statmuse/core/time'
import Image from '@components/image.astro'
import {
  askPath,
  getBgColor,
  getImage,
  getNlg,
  parseSearchParams,
  paginate,
} from '@lib/asks'
import { Caching } from '@lib/caching'
import Hero from '@components/hero.astro'

// export const prerender = true

const meta = {
  title: 'History',
}

Caching.none(Astro)

if (Astro.locals.session.type !== 'user') {
  return Astro.redirect('/')
}

const userId = Astro.locals.session.properties.id
const money = Astro.url.searchParams.get('money')
const searchParams = parseSearchParams(Astro.url.searchParams)
let asks =
  money === null
    ? await getUserAsks(userId, searchParams)
    : await getFinanceUserAsks(userId, searchParams)

const overflow = asks.length > ASK_LIMIT

if (overflow && (searchParams.p || searchParams.page === 'last')) {
  asks = asks.slice(1)
} else {
  asks = asks.slice(0, ASK_LIMIT)
}

const paginationOptions = paginate(asks, searchParams, overflow)
---

<Layout
  {meta}
  colors={{ foreground: '#fff', background: '#00c1d8' }}
  renderRightColumn={false}
>
  <Hero
    content="Manage your account."
    navProps={{
      href: () => '',
      selected: 'history',
      links: [
        {
          text: 'History',
          param: 'history',
          href: '/account/history',
        },
        {
          text: 'Settings',
          param: 'settings',
          href: '/account/settings',
        },
      ],
    }}
  />
  <div style="display: flex; gap: 10px; margin-top: 20px;">
    <a
      class={`flex items-center justify-center min-w-[80px] border border-secondary rounded-md hover:no-underline hover:text-white hover:bg-secondary p-[5px] ${
        money === null && 'bg-secondary text-white'
      }`}
      href={Astro.url.pathname}
    >
      Sports
    </a>
    <a
      class={`flex items-center justify-center min-w-[80px] border border-secondary rounded-md hover:no-underline hover:text-white hover:bg-secondary p-[5px] ${
        money !== null && 'bg-secondary text-white'
      }`}
      href={Astro.url.pathname +
        '?' +
        new URLSearchParams({ money: '' }).toString()}
    >
      Money
    </a>
  </div>
  <section>
    <h2 class="text-2xl font-semibold my-5">History</h2>
    <div class="space-y-5">
      {
        asks.map((ask, i) => (
          <article class="flex">
            <div
              class="hidden sm:block h-24 w-36 rounded-lg mr-2.5 overflow-hidden"
              style={`background: ${getBgColor(ask)}`}
            >
              <a
                class="h-full flex justify-center items-end overflow-visible"
                href={askPath(ask)}
              >
                <Image
                  class="h-[90%] max-w-[126px] object-cover object-bottom overflow-visible"
                  src={getImage(ask) || ''}
                  alt="player illustration"
                  width={250}
                  height={172}
                  loading={i < 8 ? 'eager' : 'lazy'}
                />
              </a>
            </div>
            <div class="flex-1 flex flex-col">
              <h3 class="text-xl font-semibold">
                <a href={askPath(ask)}>{ask.query}</a>
              </h3>
              <div class="italic opacity-50">
                Answered{' '}
                {formatDate(ask.last_web_search_at as Date, 'MMMM Do, YYYY')}
              </div>
              <div
                class="flex-1 flex items-center border-l-2 border-secondary pl-1.5"
                set:html={getNlg(ask)}
              />
            </div>
          </article>
        ))
      }
    </div>
  </section>
  <ul class="text-center my-10 space-x-2">
    <li class="inline-block">
      <a
        href={Astro.url.pathname + (money !== null ? '?money=' : '')}
        class=`block p-1 border-b-2 border-transparent hover:border-secondary hover:no-underline ${['first', 'first-last'].includes(paginationOptions.current_page || '') ? 'text-black pointer-events-none' : ''}`
      >
        « First
      </a>
    </li>
    <li class="inline-block">
      <a
        href={Astro.url.pathname +
          '?' +
          new URLSearchParams({
            p: paginationOptions.p || '',
            ...(money !== null ? { money: '' } : {}),
          }).toString()}
        class=`block p-1 border-b-2 border-transparent hover:border-secondary hover:no-underline ${paginationOptions.p ? '' : 'text-[#c5c9cc] pointer-events-none'}`
      >
        &lt; Previous
      </a>
    </li>
    <li class="inline-block">
      <a
        href={Astro.url.pathname +
          '?' +
          new URLSearchParams({
            n: paginationOptions.n || '',
            ...(money !== null ? { money: '' } : {}),
          }).toString()}
        class=`block p-1 border-b-2 border-transparent hover:border-secondary hover:no-underline ${paginationOptions.n ? '' : 'text-[#c5c9cc] pointer-events-none'}`
      >
        Next &gt;
      </a>
    </li>
    <li class="inline-block">
      <a
        href={Astro.url.pathname +
          '?' +
          new URLSearchParams({
            page: 'last',
            ...(money !== null ? { money: '' } : {}),
          }).toString()}
        class=`block p-1 border-b-2 border-transparent hover:border-secondary hover:no-underline ${['last', 'first-last'].includes(paginationOptions.current_page || '') ? 'text-black pointer-events-none' : ''}`
      >
        Last »
      </a>
    </li>
  </ul>
</Layout>
