---
import Layout from '@layouts/main.astro'
import Header from '@components/header.astro'
import Hero from '@components/hero.astro'
import Visuals from '@components/visuals.astro'
import { getMusingByIdOrFriendlyId } from '@statmuse/core/musing'
import { rgbToHex } from '@statmuse/core/color'
import { getHeroProps } from '@lib/gamera'
import { title } from '@lib/meta'
import { imageForgeUrl } from '@statmuse/core/path'
import type { AnalyticsPageviewProperties } from '@lib/analytics'
import { Caching } from '@lib/caching'
import { NOT_FOUND_404 } from '@lib/response'
import Container from '@components/container.astro'
import Explore from '@components/explore.astro'
import AnswerCards from '@components/answer-cards.astro'
import { ANSWER_CARDS_ENABLED } from "src/config"
import type { LeagueParam } from '@lib/params'

const id = Astro.params.id as string
const musing = await getMusingByIdOrFriendlyId(id).executeTakeFirst()
if (!musing) return NOT_FOUND_404

const query = musing.text ?? ''
const conversationToken = musing.input_conversation_token
const preferredDomain = musing.domain.toLowerCase()

const foreground = musing.foreground_rgba
  ? rgbToHex(musing.foreground_rgba)
  : undefined
const background = musing.background_rgba
  ? rgbToHex(musing.background_rgba)
  : undefined

const heroProps = getHeroProps({ imageAlt: query, musing })

const meta = {
  title: title(query),
  description: musing.text_plain ?? '',
  facebook: {
    imageUrl: musing.image_url
      ? imageForgeUrl({
          url: musing.image_url,
          bgColor: background,
          type: 'facebook',
        })
      : undefined,
  },
  twitter: {
    imageUrl: musing.image_url
      ? imageForgeUrl({
          url: musing.image_url,
          bgColor: background,
          type: 'twitter',
        })
      : undefined,
  },
}

const contentReference = musing.answer.visual.contentReference

Caching.swr(Astro)
---

<Layout
  {meta}
  colors={{ foreground, background }}
  analytics={{
    page_type: 'musing',
    page_domain:
      musing.domain.toLowerCase() as AnalyticsPageviewProperties['page_domain'],
    query,
  }}
>
  <Header
    {query}
    {conversationToken}
    {preferredDomain}
    share={{
      type: 'musing',
      query,
      domain: preferredDomain,
      shortCode: musing.short_code,
    }}
    audioUrl={musing.audio_answer_url || undefined}
  />
  {
    heroProps ? (
      <Hero
        {...heroProps}
        shareUrl={`${process.env.SHORT_LINK_URL}e/${musing.short_code}`}
      />
    ) : null
  }
  <Visuals response={musing.answer} />
  <Container>
    <Explore
      league={musing.domain === 'EPL' ? 'fc' : preferredDomain}
      additionalQuestions={musing.answer.visual.additionalQuestions}
    />
  </Container>
  { ANSWER_CARDS_ENABLED ? <Container>
    <AnswerCards
      league={musing.domain === 'EPL' ? 'fc' : (preferredDomain as LeagueParam)}
      teamId={contentReference?.questionTags?.teamIds.length > 0
        ? contentReference?.questionTags?.teamIds[0]
        : contentReference?.answerTags?.teamIds.length > 0
        ? contentReference?.answerTags?.teamIds[0]
        : undefined}
    />
  </Container> : null}
</Layout>
