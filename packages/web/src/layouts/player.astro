---
import Layout from '@layouts/main.astro'
import Header from '@components/header.astro'
import Image from '@components/image.astro'
import AnswerShare from '@components/answer-share.astro'
import Explore from '@components/explore.astro'
import TwitterShare from '@components/icons/twitter.astro'
import AnswerCards from '@components/answer-cards.astro'
import HeroPanel from '@components/hero-panel.astro'
import Nav from '@components/nav.astro'
import GridDropdown from '@components/grid-dropdown.astro'
import {
  getUrlForEntity,
  getDefaultBustImageUrl,
  tokensToText,
  type GameraPlayerBio,
  type GameraParameter,
} from '@statmuse/core/gamera'
import { type Metadata, getLeagueKeywords } from '@lib/meta'
import { imageForgeUrl } from '@statmuse/core/path'
import type { AnalyticsPageviewProperties } from '@lib/analytics'
import { leagueToDomain, type LeagueParam } from '@lib/params'
import { ANSWER_CARDS_ENABLED } from 'src/config'
import AditudeAdBanner from '@components/aditude-ad-banner.svelte'
import type { NavLink } from 'src/types'

interface Props {
  bio: GameraPlayerBio
  page: 'overview' | 'stats' | 'game-log' | 'matches' | 'splits' | 'bio'
  meta?: Metadata
  league: LeagueParam
  query?: string
  analytics?: AnalyticsPageviewProperties
  parameters?: Record<string, GameraParameter>
}

const {
  bio,
  meta,
  query,
  league,
  page,
  parameters,
  analytics = {},
} = Astro.props

const domain = leagueToDomain(league)
const teamUrl = bio.team ? getUrlForEntity(bio.team.entity) : ''
const bustImageUrl = bio.bustImageUrl || getDefaultBustImageUrl(domain)
const bustImageAlt = bio.bustImageUrl?.includes('silhouette')
  ? `Illustrated silhouette of a player wearing the ${bio.team?.name} uniform`
  : `Illustration of ${bio.usedName} wearing the ${bio.team?.name} uniform`

const canonical = { url: Astro.url.pathname + Astro.url.search }
const playerPath = getUrlForEntity({
  type: 'player',
  domain,
  id: bio.playerId.toString(),
  display: bio.usedName,
})

const links: NavLink[] = [
  { text: 'Overview', href: playerPath, param: 'overview' },
  { text: 'Stats', href: `${playerPath}/career-stats`, param: 'stats' },
  league === 'fc'
    ? { text: 'Matches', param: 'matches' }
    : { text: 'Game Log', param: 'game-log' },
  { text: 'Splits', param: 'splits' },
  { text: 'Bio', param: 'bio' },
]

const title = `${bio.usedName} - ${bio.team?.name || bio.domain} ${
  bio.position || 'Player'
}`
const description = bio.summaryNlg ? tokensToText(bio.summaryNlg) : undefined
const keywords = `${getLeagueKeywords(domain)} ${
  bio.usedName
} career stats statistics`

const facebook = {
  imageUrl: imageForgeUrl({
    url: bustImageUrl,
    bgColor: bio.team?.colors?.backgroundColor ?? '#FFF',
    type: 'facebook',
  }),
}
const twitter = {
  imageUrl: imageForgeUrl({
    url: bustImageUrl,
    bgColor: bio.team?.colors?.backgroundColor ?? '#FFF',
    type: 'twitter',
  }),
}

const preferredDomain = domain.toLowerCase()
const shareUrl = meta?.canonical?.url
  ? Astro.url.origin + meta.canonical.url
  : Astro.url.href
---

<Layout
  class="flex flex-col gap-3"
  colors={bio.team?.colors || { background: '#00c1d8', foreground: '#fff' }}
  meta={{
    title,
    description,
    keywords,
    canonical,
    facebook,
    twitter,
    pageType: 'player',
    ...(meta || {}),
  }}
  analytics={{
    query,
    is_search: true,
    page_domain: preferredDomain as AnalyticsPageviewProperties['page_domain'],
    page_type: 'player',
    disposition: bio.disposition,
    ...analytics,
  }}
>
  <Header {preferredDomain} {query} />
  <HeroPanel class="-mt-3 flex flex-col-reverse gap-3 md:flex-row">
    <Image
      class:list={{
        'h-32 md:max-w-[200px]': true,
        'mt-2 -mb-2 md:mt-0 md:-mb-3 md:-ml-2': true,
        'self-center md:self-end select-none': true,
        'object-contain object-bottom': true,
      }}
      alt={bustImageAlt}
      src={bustImageUrl}
      width={600}
      height={600}
      loading="eager"
    />
    <div class="flex flex-col justify-between items-start -mb-3 md:mt-5">
      <div class="mx-auto md:mx-0 md:flex md:gap-3 md:items-center">
        <h1
          class="text-[2rem] leading-tight font-semibold text-center md:text-left"
        >
          {bio.usedName}
        </h1>
        <div
          class:list={{
            'flex flex-1 items-center text-center': true,
            'py-0.5 px-2.5 absolute left-3 bottom-3': true,
            'md:relative md:left-auto md:bottom-auto': true,
            'bg-team-secondary text-team-primary rounded-2xl': true,
          }}
        >
          {
            teamUrl ? (
              <a
                class="text-inherit no-underline hover:no-underline"
                href={teamUrl}
                set:text={bio.team?.nickname || bio.team?.name}
              />
            ) : (
              <>{bio.team?.nickname || bio.team?.name}</>
            )
          }
        </div>
      </div>
      <Nav
        class="hidden md:flex"
        hero
        {links}
        selected={page}
        href={(p) => `${playerPath}/${p}`}
      />
    </div>
    <div
      class:list={{
        'flex flex-row gap-2.5 items-center': true,
        'absolute right-3 bottom-3 md:top-3 md:bottom-auto px-2 py-1': true,
        'rounded-2xl bg-team-secondary text-team-primary': true,
      }}
    >
      <TwitterShare shareUrl={Astro.url.href} />
      <AnswerShare onlyIcon url={shareUrl} />
    </div>
    {
      parameters && (
        <GridDropdown
          class="hidden lg:flex absolute right-3 bottom-3"
          {parameters}
        />
      )
    }
  </HeroPanel>

  <div class="h-[50px] md:h-[90px] mb-1.5 flex justify-center items-center">
    <AditudeAdBanner client:only="svelte" />
  </div>

  <Nav
    class="md:hidden"
    teamColors
    {links}
    selected={page}
    href={(p) => `${playerPath}/${p}`}
  />
  {parameters && <GridDropdown class="flex lg:hidden" {parameters} />}
  <slot />
  <Explore {league} additionalQuestions={bio.additionalQuestions} />
  {
    ANSWER_CARDS_ENABLED && (
      <AnswerCards {league} teamId={bio.team?.entity.id.split('/')[0]} />
    )
  }
</Layout>
