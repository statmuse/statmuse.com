---
import Panel from '@components/panel.astro'
import Layout from '@layouts/base.astro'
import type { Metadata } from '@lib/meta'

interface Props {
  league: string
  meta?: Metadata
  prefixPath: string
  enableAdBanner?: boolean
  selected: 'examples' | 'data'
}

const { league, meta, prefixPath, selected, ...rest } = Astro.props

const domains = ['NBA', 'NFL', 'NHL', 'MLB', 'PGA', 'Premier League']

const productPages = [
  {
    href: '/product/examples',
    title: 'Examples',
  },
  {
    href: '/product/data',
    title: 'Data Coverage',
  },
]
---

<Layout
  {meta}
  hero={{ content: 'The elephant of sports and financial information.' }}
  colors={{ foreground: '#fff', background: '#00c1d8' }}
  navProps={{
    href: () => '',
    selected,
    links: [
      {
        text: 'Examples',
        param: 'examples',
        href: '/product/examples',
      },
      {
        text: 'Data Coverage',
        param: 'data',
        href: '/product/data',
      },
    ],
  }}
  {...rest}
>
  <div class="flex flex-wrap gap-6 md:gap-12 py-12">
    <Panel class="w-full md:w-64 text-sm md:text-base self-start">
      <div class="block md:hidden">
        <select
          id="select"
          class="w-full font-bold text-sm text-primary dark:bg-gray-3 p-[0.5em]"
        >
          {
            domains.map((domain) => (
              <option
                value={
                  domain === 'Premier League' ? 'fc' : domain.toLowerCase()
                }
                selected={domain.toLowerCase() === league}
              >
                {domain}
              </option>
            ))
          }
        </select>
      </div>
      <ul class="hidden md:block">
        {
          domains.map((domain) => (
            <li
              class={`rounded-md hover:bg-[#f4f6f9] hover:dark:bg-gray-2 ${
                ((domain === 'Premier League' && league === 'fc') ||
                  league === domain.toLowerCase()) &&
                'font-bold bg-[#f4f6f9] dark:bg-gray-2'
              }`}
            >
              <a
                class="block p-3 cursor-pointer"
                href={`${prefixPath}/${
                  domain === 'Premier League' ? 'fc' : domain.toLowerCase()
                }`}
              >
                {domain}
              </a>
            </li>
          ))
        }
      </ul>
    </Panel>
    <div class="flex-1">
      <slot />
    </div>
  </div>
</Layout>

<script define:vars={{ prefixPath }}>
  const onChange = (e) => {
    window.location.pathname = `${prefixPath}/${e.target.value}`
  }
  document.getElementById('select')?.addEventListener('change', onChange)
</script>
