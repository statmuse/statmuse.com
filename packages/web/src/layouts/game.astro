---
import Layout from '@layouts/base.astro'
import Explore from '@components/explore.astro'
import {
  type GameraBoxScore,
  tokensToHtml,
  tokensToText,
} from '@statmuse/core/gamera'
import type { Metadata } from '@lib/meta'
import { imageForgeUrl } from '@statmuse/core/path'
import type { AnalyticsPageviewProperties } from '@lib/analytics'
import { NOT_FOUND_404 } from '@lib/response'
import AnswerCards from '@components/answer-cards.astro'
import { ANSWER_CARDS_ENABLED } from 'src/config'
import type { LeagueParam } from '@lib/params'
import AditudeAdBanner from '@components/aditude-ad-banner.svelte'
import { formatDate } from '@statmuse/core/time'

interface Props {
  data: GameraBoxScore
  preferredDomain: string
  meta?: Metadata
}

const { data, preferredDomain } = Astro.props
const { league, game } = Astro.params
if (!game || !preferredDomain) return NOT_FOUND_404

// const domain = league.toUpperCase() as GameraDomain
// const path = Astro.url.pathname
// const canonical = Astro.url.pathname + Astro.url.search
const answer = tokensToHtml(data.nlg.text.answer)
const subject = data.visual.summary.subject
const teamId = data.visual.detail[0].homeTeam.entity?.id.split('/')[0]

// Suns 124-111 Pelicans (Apr 1, 2024) Box Score

const [detail] = data.visual.detail
const winner =
  detail.homeTeam.score < detail.awayTeam.score
    ? detail.awayTeam
    : detail.homeTeam
const loser =
  detail.homeTeam.score < detail.awayTeam.score
    ? detail.homeTeam
    : detail.awayTeam
const formattedDate = formatDate(new Date(detail.gameDate), 'MMM DD, YYYY')
const title = `${winner.shortName ?? winner.name} ${winner.score}-${
  loser.score
} ${loser.shortName ?? loser.name} (${formattedDate}) Box Score`

const meta = {
  title,
  description: tokensToText(data.nlg.text.answer),
  pageType: 'game',
  facebook: {
    imageUrl: imageForgeUrl({
      url: data.visual.summary.subject.imageUrl,
      bgColor: subject.colors.background,
      type: 'facebook',
    }),
  },
  twitter: {
    imageUrl: imageForgeUrl({
      url: data.visual.summary.subject.imageUrl,
      bgColor: subject.colors.background,
      type: 'twitter',
    }),
  },
}
---

<Layout
  {meta}
  colors={subject?.colors}
  {...Astro.props.meta ?? {}}
  analytics={{
    is_search: true,
    page_domain: preferredDomain as AnalyticsPageviewProperties['page_domain'],
    page_type: 'game',
  }}
  {preferredDomain}
  hero={{
    content: answer,
    html: true,
    imageUrl: subject.imageUrl,
    imageAlt: subject.entities
      ? subject.entities[0].display
      : `${preferredDomain} image`,
    shareUrl: Astro.url.href,
  }}
>
  <div class="h-[50px] md:h-[90px] mb-1.5 flex justify-center items-center">
    <AditudeAdBanner client:only="svelte" />
  </div>
  <slot />
  <Explore {league} additionalQuestions={data.visual.additionalQuestions} />
  {
    ANSWER_CARDS_ENABLED ? (
      <AnswerCards league={league as LeagueParam} {teamId} />
    ) : null
  }
</Layout>
