---
import MoneyBaseLayout from '@layouts/money-base.astro'
import TradingviewTicker from '@components/tradingview-ticker.astro'
import Explore from '@components/explore.astro'
import { getUrlForEntity, type AssetProfile } from '@statmuse/core/kanedama'
import { imageForgeUrl } from '@statmuse/core/path'
import { cdnBaseUrl } from '@statmuse/core/gamera'
import type { ComponentProps } from 'astro/types'
import type Nav from '@components/nav.astro'
import type { NavLink } from 'src/types'
import Hero from '@components/hero.astro'

interface Props extends ComponentProps<typeof MoneyBaseLayout> {
  profile: AssetProfile
  page: 'overview' | 'stats' | 'financials' | 'news'
}

const { profile, meta, query, page, analytics = {} } = Astro.props

const assetPath = getUrlForEntity({
  type: 'assetProfile',
  id: profile.asset.symbol,
  display: profile.asset.officialName,
})
const [image] = profile.images
const bustImageUrl = image ? image.imageUrl : undefined // default image fallback?
const bustImageAlt = profile.asset.canonicalName

const colors = image
  ? image.colors[0]
  : { foreground: '#fff', background: '#00c1d8' }

const path = Astro.url.pathname
const canonical = { url: Astro.url.pathname + Astro.url.search }

const title = `${
  profile.asset.canonicalName || profile.asset.officialName
} Overview`

const facebook = {
  imageUrl:
    bustImageUrl &&
    imageForgeUrl({
      url: `${cdnBaseUrl}/${bustImageUrl}`,
      bgColor: colors?.background,
      type: 'facebook',
    }),
}
const twitter = {
  imageUrl:
    bustImageUrl &&
    imageForgeUrl({
      url: `${cdnBaseUrl}/${bustImageUrl}`,
      bgColor: colors?.background,
      type: 'twitter',
    }),
}

const links: NavLink[] = [
  { text: 'Overview', href: assetPath, param: 'overview' },
  { text: 'Stats', href: `${assetPath}/stats`, param: 'stats' },
  { text: 'Financials', href: `${assetPath}/financials`, param: 'financials' },
  { text: 'News', href: `${assetPath}/news`, param: 'news' },
]
const navProps: ComponentProps<typeof Nav> = {
  teamColors: true,
  links: links,
  selected: page,
  href: (p) => `${assetPath}/${p}`,
}

const share = {
  type: 'profile',
  url: meta?.canonical?.url
    ? Astro.url.origin + meta.canonical.url
    : Astro.url.href,
}
---

<MoneyBaseLayout
  tradingview
  {colors}
  meta={{ title, canonical, facebook, twitter, ...(meta || {}) }}
  analytics={{
    query,
    is_search: true,
    page_domain: 'finance',
    page_type: 'asset',
    ...analytics,
  }}
  {query}
  {share}
>
  <Hero
    content={profile.asset.canonicalName}
    imageUrl={bustImageUrl}
    imageAlt={bustImageAlt}
    {navProps}
    {share}
    renderAdBanner
  >
    <!-- <div slot="hero">
      <div class="mt-6" style="height: 94px; overflow: hidden;">
        <TradingviewTicker {profile} />
      </div>
    </div> -->
  </Hero>
  <slot />
  <Explore league="money" />
</MoneyBaseLayout>
