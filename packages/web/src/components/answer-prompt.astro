---
import Layout from '@layouts/main.astro'
import Header from '@components/header.astro'
import Container from '@components/container.astro'
import {
  tokensToText,
  tokensToHtml,
  type GameraChoicesResponse,
} from '@statmuse/core/gamera'
import { clean } from '@statmuse/core/path'

interface Props {
  answer: GameraChoicesResponse
}

const { answer } = Astro.props
const conversationToken = answer.conversation.token
const query = clean(
  tokensToText(
    answer.visual.summaryTokens.filter((t) => t.type !== 'inferred'),
  ),
)
---

<Layout
  analytics={{
    is_search: true,
    page_type: 'ask',
    disposition: answer.disposition,
    tokenizationScore: answer.tokenizationScore,
    query,
  }}
>
  <Header {query} {conversationToken} />
  <Container>
    <div class="h-screen w-full flex flex-col justify-center items-center">
      <h1
        class="text-3xl my-5 font-semibold"
        set:html={tokensToHtml(answer.visual.summary.answer)}
      />
      <div
        class="w-full flex flex-col sm:flex-row sm:justify-center my-5 gap-2"
      >
        {
          answer.visual.choices.map((choice) => (
            <form action="/ask" method="post">
              <input name="_method" type="hidden" value="POST" />
              <input
                id="question_conversation_token"
                name="question[conversation_token]"
                type="hidden"
                value={conversationToken}
              />
              <input
                id="question_query"
                name="question[query]"
                required=""
                type="hidden"
                value={choice.input}
              />
              <input
                id="question_query_clarification_for"
                name="question[query_clarification_for]"
                type="hidden"
                value={query}
              />
              <button
                data-cy-choice-btn
                class="w-full text-xl border-2 border-black rounded-md cursor-pointer p-7"
                type="submit"
              >
                {choice.display}
              </button>
            </form>
          ))
        }
      </div>
    </div>
  </Container>
</Layout>
