---
import Layout from '@layouts/base.astro'
import AnswerCards from '@components/answer-cards.astro'
import { ANSWER_CARDS_ENABLED } from 'src/config'
import Explore from '@components/explore.astro'
import EplBoxscore from '@components/epl/boxscore.astro'
import {
  tokensToText,
  type GameraAnswerEplBoxScore,
} from '@statmuse/core/gamera'
import type { AnalyticsPageviewProperties } from '@lib/analytics'
import { clean, title, description } from '@lib/meta'
import { createAskPath, imageForgeUrl } from '@statmuse/core/path'
import * as Link from '@statmuse/core/link'

interface Props {
  data: GameraAnswerEplBoxScore
  analytics: AnalyticsPageviewProperties
}

const { analytics, data } = Astro.props

const subject = data.visual.summary.subject
const domain = data.visual.domain
const preferredDomain = domain.toLowerCase()

const conversationToken = data.conversation.token
const query = clean(
  tokensToText(data.visual.summaryTokens?.filter((t) => t.type !== 'inferred')),
)

const meta = {
  title: title(query),
  description: description(data),
  canonical: {
    url: createAskPath({
      domain: preferredDomain || '',
      query,
    }),
    rewrite: true,
  },
  pageType: 'ask',
  facebook: {
    imageUrl:
      subject.imageUrl &&
      imageForgeUrl({
        url: subject.imageUrl,
        bgColor: subject.colors?.background,
        type: 'facebook',
      }),
  },
  twitter: {
    imageUrl:
      subject.imageUrl &&
      imageForgeUrl({
        url: subject.imageUrl,
        bgColor: subject.colors?.background,
        type: 'twitter',
      }),
  },
}

const contentReference = data.visual.contentReference

const code = await Link.askShortCode(query, preferredDomain || '')
---

<Layout
  colors={{ foreground: '#000', background: '#e0e0e0' }}
  {meta}
  analytics={{
    is_search: true,
    page_type: 'game',
    page_domain: preferredDomain as AnalyticsPageviewProperties['page_domain'],
    disposition: data.disposition,
    tokenizationScore: data.tokenizationScore,
    query,
    ...analytics,
  }}
  {query}
  {conversationToken}
  {preferredDomain}
>
  <EplBoxscore {data} />
  <Explore league="fc" additionalQuestions={data.visual.additionalQuestions} />
  {
    ANSWER_CARDS_ENABLED && (
      <AnswerCards
        domain="EPL"
        teamId={
          contentReference?.questionTags?.teamIds.length > 0
            ? contentReference?.questionTags?.teamIds[0]
            : contentReference?.answerTags?.teamIds.length > 0
            ? contentReference?.answerTags?.teamIds[0]
            : undefined
        }
      />
    )
  }
</Layout>
