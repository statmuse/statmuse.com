---
import type { HeroProps } from '@lib/props'
import Nav from '@components/nav.astro'
import type { ComponentProps } from 'astro/types'
import type { GameraParameter } from '@statmuse/core/gamera'
import Panel from '@components/panel.astro'
import { marked } from 'marked'
import Image from '@components/image.astro'
import GridDropdown from '@components/grid-dropdown.astro'
import Share from '@components/share/index.svelte'
import AditudeAdBanner from '@components/aditude-ad-banner.svelte'

interface Props extends HeroProps {
  navProps?: ComponentProps<typeof Nav>
  parameters?: Record<string, GameraParameter>
  class?: string
  renderAdBanner?: boolean
}

const {
  affiliation,
  affiliationUrl,
  markdown,
  html,
  content,
  imageAlt,
  imageUrl,
  url,
  navProps,
  parameters,
  share,
  renderAdBanner = false,
} = Astro.props

const markdownOrHtml = markdown || html
const nlg = markdown
  ? marked(content, {
      gfm: true,
      breaks: true,
      mangle: false,
      headerIds: false,
    })
  : content
---

<div class="@container/hero flex flex-col gap-3">
  <Panel
    team
    class:list={{
      'rounded-none border-0 md:rounded-2xl': true,
      '-mx-3 pb-2 pt-4 px-3 @lg/hero:py-3 @lg/hero:px-5 md:mx-0 whitespace-nowrap': true,
      'flex flex-col-reverse gap-3 @lg/hero:flex-row': true,
      [Astro.props.class ?? '']: !!Astro.props.class,
    }}
  >
    <slot name="hero" />
    {
      imageUrl ? (
        <Image
          class:list={{
            'h-32 @lg/hero:max-w-[200px]': true,
            'mt-2 -mb-2 @lg/hero:mt-0 @lg/hero:-mb-3 @lg/hero:-ml-2': true,
            'self-center @lg/hero:self-end select-none': true,
            'object-contain object-bottom': true,
          }}
          alt={imageAlt ?? content}
          src={imageUrl}
          width={200}
          height={200}
          loading="eager"
        />
      ) : null
    }
    <div class="flex flex-col justify-between @lg/hero:items-start">
      {
        markdownOrHtml ? (
          <div
            class:list={{
              'flex-1 flex flex-col justify-between text-center @lg/hero:text-left': true,
            }}
          >
            <h1
              class:list={{
                'font-semibold text-xl leading-snug my-auto text-pretty': true,
                // '@lg/hero:text-2xl lg:text-[1.33rem] xl:text-2xl': true,
                '[&>p]:my-[1em] [&>ul]:my-[1em] [&>p>a]:underline [&>p>a]:text-team-secondary': true,
              }}
              set:html={markdown ? nlg : undefined}
            >
              {html ? (
                <span
                  class="my-[1em] [&>a]:underline [&>a]:text-team-secondary whitespace-pre-wrap text-pretty"
                  set:html={nlg}
                />
              ) : null}
            </h1>
          </div>
        ) : (
          <div
            class:list={{
              'mx-auto @lg/hero:mx-0 @lg/hero:flex @lg/hero:gap-3 @lg/hero:items-center @lg/hero:mt-5': true,
              'mb-5 mt-5': !imageUrl,
            }}
          >
            <slot name="back" />
            <h1 class="text-2xl leading-none font-semibold text-center @lg/hero:text-left text-pretty">
              {url ? (
                <a
                  class="text-current"
                  href={url.href}
                  title={url.title}
                  data-cy-team-name-link
                >
                  {content}
                </a>
              ) : (
                content
              )}
            </h1>
            {affiliation ? (
              <div
                class:list={{
                  'flex flex-1 items-center text-center': true,
                  'py-0.5 px-2.5 absolute left-3 bottom-3': true,
                  '@lg/hero:relative @lg/hero:left-auto @lg/hero:bottom-auto': true,
                  'bg-team-secondary text-team-primary rounded-2xl': true,
                }}
              >
                {affiliationUrl ? (
                  <a
                    class="text-inherit no-underline hover:no-underline"
                    href={affiliationUrl}
                    set:text={affiliation}
                  />
                ) : (
                  <>{affiliation}</>
                )}
              </div>
            ) : null}
          </div>
        )
      }
      {
        navProps ? (
          <Nav class="hidden @lg/hero:flex @lg/hero:-mb-3" hero {...navProps} />
        ) : null
      }
    </div>
    {
      share ? (
        <div
          class:list={{
            'absolute right-3 bottom-3 @lg/hero:top-3 @lg/hero:bottom-auto px-2 py-1': true,
            'rounded-2xl bg-team-secondary text-team-primary': true,
          }}
        >
          <Share client:load {share} />
        </div>
      ) : null
    }
    {
      parameters && (
        <GridDropdown
          class="hidden @2xl/hero:flex w-52 absolute right-3 bottom-3"
          {parameters}
        />
      )
    }
  </Panel>
  {
    renderAdBanner ? (
      <div class="md:hidden h-[50px] md:h-[90px] flex justify-center items-center">
        <AditudeAdBanner
          client:only="svelte"
          divId="pb-slot-anchor"
          slotId="pb-slot-anchor"
          placeholderClass="w-[320px] md:w-[728px] h-[50px] md:h-[90px]"
          onlyMobile
        />
      </div>
    ) : null
  }
  {navProps ? <Nav class="@lg/hero:hidden" {...navProps} /> : null}
  {parameters && <GridDropdown class="flex @2xl/hero:hidden" {parameters} />}
</div>
