---
import { marked } from 'marked'
import type { HeroProps } from '@lib/props'
import Image from '@components/image.astro'
import AnswerShare from '@components/answer-share.astro'
import AnswerAudio from '@components/answer-audio.astro'
import TwitterShare from '@components/icons/twitter.astro'
import HeroPanel from '@components/hero-panel.astro'

interface Props extends HeroProps {
  class?: string | null
}

const answered = Astro.props.answered
const markdown = Astro.props.markdown ?? false
const shareUrl = Astro.props.shareUrl
const content = markdown
  ? marked(Astro.props.content, {
      gfm: true,
      breaks: true,
      mangle: false,
      headerIds: false,
    })
  : Astro.props.content
---

<HeroPanel class={Astro.props.class}>
  <div class="flex flex-col md:flex-row relative h-full">
    <div class="flex-1 flex flex-col justify-between text-center md:text-left">
      {
        answered ? (
          <span class="italic opacity-50 saturate-0">Answered {answered}</span>
        ) : null
      }
      <h1
        data-cy-nlg
        class:list={{
          'font-semibold text-xl leading-snug my-auto': true,
          // 'md:text-xl lg:text-[1.33rem] xl:text-2xl': true,
          '[&>p]:my-[1em] [&>ul]:my-[1em] [&>p>a]:underline [&>p>a]:text-team-secondary':
            markdown,
        }}
        set:html={markdown ? content : undefined}
      >
        {
          !markdown ? (
            <p
              class="my-[1em] [&>a]:underline [&>a]:text-team-secondary"
              set:html={content}
            />
          ) : null
        }
      </h1>
    </div>
    {
      Astro.props.imageUrl ? (
        <Image
          class:list={{
            'h-36 md:h-40 md:max-w-[350px]': true,
            'mt-2 md:mt-0 md:pl-6 md:pr-1.5 -mb-2 md:-mb-3': true,
            'self-center md:self-end select-none': true,
            'object-contain object-bottom': true,
          }}
          alt={Astro.props.imageAlt ?? null}
          src={Astro.props.imageUrl}
          width={750}
          height={750}
          loading="eager"
        />
      ) : null
    }
    <div
      class="flex flex-col items-center absolute right-0 bottom-2.5 space-y-2.5"
    >
      {shareUrl && <TwitterShare {shareUrl} />}
      {shareUrl && <AnswerShare onlyIcon url={shareUrl} />}
      {Astro.props.audioUrl && <AnswerAudio src={Astro.props.audioUrl} />}
    </div>
  </div>
</HeroPanel>
