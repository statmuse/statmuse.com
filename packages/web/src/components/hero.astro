---
import { marked } from 'marked'
import Container from '@components/container.astro'
import Image from '@components/image.astro'
import type { HeroProps } from '@lib/props'
import AnswerShare from './answer-share.astro'
import AnswerAudio from './answer-audio.astro'

interface Props extends HeroProps {}

const answered = Astro.props.answered
const markdown = Astro.props.markdown ?? false
const content = markdown
  ? marked(Astro.props.content, {
      gfm: true,
      breaks: true,
      mangle: false,
      headerIds: false,
    })
  : Astro.props.content
---

<Container class="mb-5 bg-team-primary text-team-secondary">
  <div class="flex flex-col md:flex-row pt-4 md:pt-6 relative">
    <div class="flex-1 flex flex-col justify-between text-center md:text-left">
      {
        answered ? (
          <span class="italic opacity-50 saturate-0">Answered {answered}</span>
        ) : null
      }
      <h1
        data-cy-nlg
        class:list={{
          'font-semibold text-xl md:text-2xl md:leading-snug lg:text-[1.75rem] xl:text-3xl xl:leading-snug my-auto': true,
          '[&>p]:my-[1em] [&>ul]:my-[1em] [&>p>a]:underline [&>p>a]:text-team-secondary':
            markdown,
        }}
        set:html={markdown ? content : undefined}
      >
        {
          !markdown ? (
            <p
              class="my-[1em] [&>a]:underline [&>a]:text-team-secondary"
              set:html={content}
            />
          ) : null
        }
      </h1>
    </div>
    {
      Astro.props.imageUrl ? (
        <Image
          class="h-44 md:h-52 self-center md:self-end mt-2 md:mt-0 md:pl-6 md:pr-1.5 select-none object-contain object-bottom md:max-w-[350px]"
          alt={Astro.props.imageAlt}
          src={Astro.props.imageUrl}
          width={750}
          height={750}
          loading="eager"
        />
      ) : null
    }
    <div
      class="md:hidden flex flex-col items-center absolute right-0 bottom-2.5 space-y-2.5"
    >
      <AnswerShare onlyIcon />
      {Astro.props.audioUrl && <AnswerAudio src={Astro.props.audioUrl} />}
    </div>
  </div>
</Container>
