---
import Layout from '@layouts/base.astro'
import Select from '@components/select.svelte'
import TrendingLists from '@components/trending-lists.astro'
import TrendingMore from '@components/trending-more.astro'
import Back from '@components/icons/back.astro'
import type { NavLink, TrendingListItem } from 'src/types'
import tailwindConfig from '../../tailwind.config.ts'
import type { Category } from 'src/types'
import type { AnalyticsPageviewProperties } from '@lib/analytics'
import { getTrendingData } from '@lib/trending'
import Hero from '@components/hero.astro'

const colors = tailwindConfig.theme.extend.colors

interface Props {
  league: string
  selected?: string
  category?: Category
}

const timeframes: Record<string, string> = {
  last24Hours: 'LAST_24_HOURS',
  last7Days: 'LAST_7_DAYS',
  last30Days: 'LAST_30_DAYS',
  thisYear: 'THIS_YEAR',
}

const { league, selected, category } = Astro.props
const countryParam = Astro.url.searchParams.get('country')
const timeframeParam = Astro.url.searchParams.get('timeframe')
const country = countryParam?.toUpperCase()
const timeframe = timeframes[timeframeParam ?? 'last24Hours']

const data = await getTrendingData({ league, timeframe, country })

const categoryPath = category ? `/${category}` : ''
const links: NavLink[] = [
  {
    text: 'All',
    param: 'all',
    href: '/trending' + categoryPath + Astro.url.search,
  },
  { text: 'FC', param: 'fc' },
  { text: 'NBA', param: 'nba' },
  { text: 'NFL', param: 'nfl' },
  { text: 'NHL', param: 'nhl' },
  { text: 'MLB', param: 'mlb' },
  { text: 'PGA', param: 'pga' },
  { text: 'Money', param: 'money' },
]

let trendingListItems: TrendingListItem[] = []
const dataset = data?.datasets?.find((d) => d.key === category)
if (dataset) trendingListItems = dataset.items

const leagueTitle =
  league.toLowerCase() === 'all'
    ? 'Sports'
    : league.toLowerCase() === 'money'
    ? 'Money'
    : 'Sports'

const title = category
  ? `Trending ${category[0].toUpperCase() + category.substring(1)}`
  : `Trending ${leagueTitle}`

const backUrl =
  selected && selected !== 'all'
    ? `/${selected}/trending${Astro.url.search}`
    : `/trending${Astro.url.search}`
---

<Layout
  analytics={{
    page_type: 'trending',
    page_domain:
      selected === 'money'
        ? 'finance'
        : selected === 'fc'
        ? 'epl'
        : selected === 'all'
        ? 'sports'
        : (selected?.toLowerCase() as AnalyticsPageviewProperties['page_domain']),
  }}
  meta={{ title }}
  colors={{ foreground: colors.gray['8'], background: colors.teal }}
  money={selected === 'money'}
  preferredDomain={selected}
  renderRightColumn={false}
>
  <Hero
    content={title}
    navProps={{
      links,
      selected,
      href: (l) => `/${l}/trending${categoryPath}${Astro.url.search}`,
    }}
  >
    {
      category ? (
        <a
          slot="back"
          href={backUrl}
          class="text-gray-8 cursor-pointer rounded-full p-1.5 pl-0 -mb-1 @lg/hero:static absolute left-3"
        >
          <Back class="w-5 aspect-square" />
        </a>
      ) : null
    }
    <Fragment slot="hero">
      <div class="hidden @2xl/hero:flex gap-3 absolute right-3 bottom-3">
        <Select
          client:load
          class="md:w-[200px]"
          hideLabel
          label="Timeframe"
          param="timeframe"
          initial={Astro.url.searchParams.get('timeframe')}
          options={[
            { label: 'Last 24 Hours', value: 'last24Hours' },
            { label: 'Last 7 Days', value: 'last7Days' },
            { label: 'Last 30 Days', value: 'last30Days' },
            { label: 'This Year', value: 'thisYear' },
          ]}
        />
        <Select
          client:load
          class="md:w-[200px]"
          hideLabel
          label="Location"
          param="country"
          initial={Astro.url.searchParams.get('country')}
          options={[
            { label: 'Global', value: 'global' },
            { label: 'United States', value: 'US' },
            { label: 'France', value: 'FR' },
            { label: 'Finland', value: 'FI' },
            { label: 'Canada', value: 'CA' },
            { label: 'Netherlands', value: 'NL' },
            { label: 'Philippines', value: 'PH' },
            { label: 'Australia', value: 'AU' },
            { label: 'Ireland', value: 'IE' },
            { label: 'United Kingdom', value: 'GB' },
            { label: 'Germany', value: 'DE' },
            { label: 'Brazil', value: 'BR' },
            { label: 'Mexico', value: 'MX' },
            { label: 'India', value: 'IN' },
            { label: 'Italy', value: 'IT' },
            { label: 'Singapore', value: 'SG' },
            { label: 'Japan', value: 'JP' },
            { label: 'New Zealand', value: 'NZ' },
            { label: 'Poland', value: 'PL' },
            { label: 'Spain', value: 'ES' },
            { label: 'Sweden', value: 'SE' },
          ]}
        />
      </div>
    </Fragment>
  </Hero>
  <div class="@container/hero">
    <div class="@2xl/hero:hidden flex gap-3">
      <Select
        client:load
        class="flex-1"
        hideLabel
        label="Timeframe"
        param="timeframe"
        initial={Astro.url.searchParams.get('timeframe')}
        options={[
          { label: 'Last 24 Hours', value: 'last24Hours' },
          { label: 'Last 7 Days', value: 'last7Days' },
          { label: 'Last 30 Days', value: 'last30Days' },
          { label: 'This Year', value: 'thisYear' },
        ]}
      />
      <Select
        client:load
        class="flex-1"
        hideLabel
        label="Location"
        param="country"
        initial={Astro.url.searchParams.get('country')}
        options={[
          { label: 'Global', value: 'global' },
          { label: 'United States', value: 'US' },
          { label: 'France', value: 'FR' },
          { label: 'Finland', value: 'FI' },
          { label: 'Canada', value: 'CA' },
          { label: 'Netherlands', value: 'NL' },
          { label: 'Philippines', value: 'PH' },
          { label: 'Australia', value: 'AU' },
          { label: 'Ireland', value: 'IE' },
          { label: 'United Kingdom', value: 'GB' },
          { label: 'Germany', value: 'DE' },
          { label: 'Brazil', value: 'BR' },
          { label: 'Mexico', value: 'MX' },
          { label: 'India', value: 'IN' },
          { label: 'Italy', value: 'IT' },
          { label: 'Singapore', value: 'SG' },
          { label: 'Japan', value: 'JP' },
          { label: 'New Zealand', value: 'NZ' },
          { label: 'Poland', value: 'PL' },
          { label: 'Spain', value: 'ES' },
          { label: 'Sweden', value: 'SE' },
        ]}
      />
    </div>
  </div>
  {
    category ? (
      <TrendingMore items={trendingListItems} />
    ) : (
      <TrendingLists item={data} />
    )
  }
</Layout>
