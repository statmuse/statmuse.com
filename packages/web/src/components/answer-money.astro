---
import MoneyBaseLayout from '@layouts/money-base.astro'
import Footer from '@components/footer.astro'
import Visuals from '@components/visuals-money.astro'
import Explore from '@components/explore.astro'
import { getHeroProps } from '@lib/kanedama'
import { clean, createAskPath, imageForgeUrl } from '@statmuse/core/path'
import { tokensToText } from '@statmuse/core/kanedama'
import { title } from '@lib/meta'
import type { KanedamaResponse } from '@statmuse/core/kanedama'
import * as Link from '@statmuse/core/link'
import type { AnalyticsPageviewProperties } from '@lib/analytics'

interface Props {
  answer: KanedamaResponse
  analytics: AnalyticsPageviewProperties
}

const { answer, analytics } = Astro.props
const conversationToken = answer.conversation.token
const subject = answer.visual.summary.subject

const query = clean(
  tokensToText(
    answer.visual.summaryTokens.filter((t) => t.type !== 'inferred'),
  ),
)

const heroProps = getHeroProps({ imageAlt: query, response: answer })

const code = await Link.financeAskShortCode(query)

const meta =
  answer.type !== 'error'
    ? {
        title: title(query),
        description:
          answer.type !== 'nlgPromptForMoreInfoVisualChoicesOptional'
            ? tokensToText(answer.nlg.text.answer)
            : '',
        canonical:
          answer.type !== 'nlgPromptForMoreInfoVisualChoicesOptional'
            ? {
                url: createAskPath({ domain: 'money', query }),
                rewrite: true,
              }
            : undefined,
        pageType: 'ask',
        facebook: {
          imageUrl: imageForgeUrl({
            url: heroProps?.imageUrl || '',
            bgColor: subject?.colors.background,
            type: 'facebook',
          }),
        },
        twitter: {
          imageUrl: imageForgeUrl({
            url: heroProps?.imageUrl || '',
            bgColor: subject?.colors.background,
            type: 'twitter',
          }),
        },
      }
    : {}
---

<MoneyBaseLayout
  {meta}
  class="flex flex-col gap-3"
  colors={subject?.colors}
  analytics={{
    is_search: true,
    page_type: 'ask',
    page_domain: 'finance',
    query,
    ...analytics,
  }}
  {query}
  {conversationToken}
  hero={heroProps}
>
  <!-- { -->
  <!--   heroProps ? ( -->
  <!--     <Hero -->
  <!--       {...heroProps} -->
  <!--       shareUrl={`${process.env.SHORT_LINK_URL}e/${code?.short_code}`} -->
  <!--     /> -->
  <!--   ) : null -->
  <!-- } -->
  <Visuals response={answer} {conversationToken} />
  {
    answer.type !== 'nlgPromptForMoreInfoVisualChoicesOptional' && (
      <Explore
        league="money"
        additionalQuestions={answer.visual.additionalQuestions}
      />
    )
  }
  <Footer />
</MoneyBaseLayout>
