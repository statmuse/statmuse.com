---
import {
  Image as AstroImage,
  type RemoteImageProps,
  type LocalImageProps,
} from 'astro:assets'
import { cdnBaseUrl, type GameraResponse } from '@statmuse/core/gamera'
import type { Answer } from '@statmuse/core/question'

type ImageProps = RemoteImageProps | LocalImageProps
interface Props extends Omit<ImageProps, 'src'> {
  src: string | { answer: Answer }
}

const getUrl = (src: string | { answer: Answer } | undefined) => {
  if (!src || typeof src === 'string') return src
  const answer = src.answer as GameraResponse
  const subject = answer.visual.summary.subject
  return subject.imageUrl
}

const getImageUrl = (src: string | { answer: Answer }) => {
  const raw = getUrl(src)
  if (!raw) return undefined
  const url = raw.startsWith('http') ? raw : `${cdnBaseUrl}/${raw}`
  return url
}

const multiplier = 3
const src = getImageUrl(Astro.props.src)
const width =
  typeof Astro.props.width === 'string'
    ? Number.parseInt(Astro.props.width || '0')
    : Astro.props.width || 0
---

{
  src ? (
    <AstroImage
      widths={[width * multiplier]}
      sizes={`${width * multiplier}px`}
      {...Astro.props}
      {src}
    />
  ) : (
    <div />
  )
}
