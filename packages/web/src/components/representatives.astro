---
import type { GameraGalleryImage } from '@statmuse/core/gamera'
import type { HTMLAttributes } from 'astro/types'
import Image from '@components/image.astro'

interface Props extends HTMLAttributes<'div'> {
  representatives: GameraGalleryImage[]
  title?: string
  alt: string
  fallback: string
}

const { representatives, alt, fallback } = Astro.props

const getIllustrationHeight = (image: GameraGalleryImage) => {
  const specialPlayers = [
    'Davante Adams',
    'Ja Morant',
    'Darius Garland',
    'Jarrett Allen',
    'Collin Sexton',
    'Coby White',
    'Isaiah Stewart',
    'Jalen Ramsey',
  ]
  if (specialPlayers.includes(image.entity?.display ?? '')) {
    return 158
  }

  return 128
}
---

<>
  {
    representatives.length === 0 && (
      <Image
        class="h-[90px] max-w-[120px] select-none object-contain object-bottom"
        alt={alt}
        src={fallback}
        width={180}
        height={180}
        loading="eager"
      />
    )
  }
  {
    representatives.length === 1 && (
      <Image
        class="h-[90px] max-w-[120px] select-none object-contain object-bottom"
        alt={representatives[0].entity?.display ?? ''}
        src={representatives[0].url}
        width={180}
        height={180}
        loading="eager"
      />
    )
  }
  {
    representatives.length > 1 &&
      representatives.map((representative, index) => (
        <Image
          class:list={[
            'h-[90px] max-w-[120px] select-none object-contain object-bottom',
            {
              'absolute left-0 bottom-0 -translate-x-[40px]': index === 0,
              'relative z-[1]': index === 1,
              'absolute right-0 bottom-0 translate-x-[40px]': index === 2,
            },
          ]}
          alt={representative.entity?.display ?? ''}
          src={representative.url}
          width={180}
          height={180}
          loading="eager"
        />
      ))
  }
</>
