---
import { getHeroProps } from '@lib/gamera'
import Layout from '@layouts/base.astro'
import Visuals from '@components/visuals.astro'
import Explore from '@components/explore.astro'
import {
  type GameraDefaultResponse,
  tokensToText,
  type GameraResponse,
} from '@statmuse/core/gamera'
import AnswerCards from '@components/answer-cards.astro'
import { title, description } from '@lib/meta'
import { clean, createAskPath, imageForgeUrl } from '@statmuse/core/path'
import type { AnalyticsPageviewProperties } from '@lib/analytics'
import * as Link from '@statmuse/core/link'
import { ANSWER_CARDS_ENABLED } from 'src/config'
import type { LeagueParam } from '@lib/params'
import AditudeAdBanner from '@components/aditude-ad-banner.svelte'
import WithSubscription from '@components/with-subscription.svelte'

interface Props {
  answer: GameraDefaultResponse
}

const { answer } = Astro.props
const conversationToken = answer.conversation.token
const query = clean(
  tokensToText(
    answer.visual.summaryTokens?.filter((t) => t.type !== 'inferred'),
  ),
)
const preferredDomain = answer.visual.domain?.toLowerCase()
const domain = answer.visual.domain
const subject = answer.visual.summary.subject
const contentReference = answer.visual.contentReference
const heroProps = getHeroProps({ imageAlt: query, response: answer })!
const meta = {
  title: title(query),
  description: description(answer),
  canonical: {
    url: createAskPath({
      domain: preferredDomain || '',
      query,
    }),
    rewrite: true,
  },
  pageType: 'ask',
  facebook: {
    imageUrl:
      heroProps?.imageUrl &&
      imageForgeUrl({
        url: heroProps.imageUrl,
        bgColor: subject.colors?.background,
        type: 'facebook',
      }),
  },
  twitter: {
    imageUrl:
      heroProps?.imageUrl &&
      imageForgeUrl({
        url: heroProps.imageUrl,
        bgColor: subject.colors?.background,
        type: 'twitter',
      }),
  },
}

const code = await Link.askShortCode(query, preferredDomain || '')

const pageType = (
  answer: GameraResponse,
): AnalyticsPageviewProperties['page_type'] => {
  if (answer.type === 'nlgPromptForMoreInfoVisualChoicesOptional')
    return 'prompt'
  if (answer.visual.detail?.find((d) => d.type === 'standings'))
    return 'standings'
  if (answer.visual.detail?.find((d) => d.type === 'schedule'))
    return 'schedule'
  if (answer.visual.detail?.find((d) => d.type.includes('BoxScore')))
    return 'game'
  return 'ask'
}

const shareUrl = `${process.env.SHORT_LINK_URL}e/${code?.short_code}`
const league = domain === 'EPL' ? 'fc' : (preferredDomain as LeagueParam)

const [questionTeamId] = contentReference?.questionTags?.teamIds ?? []
const [answerTeamId] = contentReference?.answerTags?.teamIds ?? []
const teamId = questionTeamId ?? answerTeamId
---

<Layout
  class="flex flex-col gap-3"
  colors={subject?.colors}
  {meta}
  analytics={{
    is_search: true,
    page_type: pageType(answer),
    page_domain: preferredDomain as AnalyticsPageviewProperties['page_domain'],
    disposition: answer.disposition,
    tokenizationScore: answer.tokenizationScore,
    query,
    contentReference: answer.visual.contentReference,
    subject: answer.visual.summary.subject,
  }}
  {query}
  {conversationToken}
  {preferredDomain}
  hero={{
    ...heroProps,
    share: {
      type: 'ask',
      query,
      domain: preferredDomain,
      shortCode: code?.short_code,
    },
  }}
>
  <div
    class="md:hidden h-[50px] md:h-[90px] mb-1.5 flex justify-center items-center"
  >
    <AditudeAdBanner
      client:only="svelte"
      divId="pb-slot-anchor"
      slotId="pb-slot-anchor"
      placeholderClass="w-[320px] md:w-[728px] h-[50px] md:h-[90px]"
      onlyMobile
    />
  </div>
  <div class="flex gap-3">
    <div class="flex-1 overflow-clip">
      <Visuals class="" response={answer} {conversationToken} />
    </div>
    <div
      class="hidden md:block basis-[300px] *:h-full [&_astro-island]:block [&_astro-slot]:block [&_astro-slot]:h-full"
    >
      <WithSubscription client:only="svelte">
        <div class="space-y-3 h-full">
          <AditudeAdBanner
            client:only="svelte"
            divId="pb-slot-square-1"
            slotId="pb-slot-square-1"
            placeholderClass="w-[300px] h-[250px]"
            onlyDesktop
          />
          <div class="sticky top-[--top-spacing]">
            <AditudeAdBanner
              client:only="svelte"
              divId="pb-slot-right-2"
              slotId="pb-slot-right-2"
              placeholderClass="w-[300px] h-[600px]"
              onlyDesktop
            />
          </div>
        </div>
      </WithSubscription>
    </div>
  </div>
  <Explore {league} additionalQuestions={answer.visual.additionalQuestions} />
  {
    preferredDomain && ANSWER_CARDS_ENABLED && (
      <AnswerCards domain={domain!} {teamId} />
    )
  }
</Layout>
