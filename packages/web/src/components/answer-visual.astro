---
import { getColumnCharts, getHeroProps, getIsSuperlative } from '@lib/gamera'
import Layout from '@layouts/base.astro'
import Visuals from '@components/visuals.astro'
import Explore from '@components/explore.astro'
import {
  type GameraDefaultResponse,
  tokensToText,
  type GameraResponse,
} from '@statmuse/core/gamera'
import AnswerCards from '@components/answer-cards.astro'
import Chart from '@components/chart.astro'
import { title, description } from '@lib/meta'
import { clean, createAskPath, imageForgeUrl } from '@statmuse/core/path'
import type { AnalyticsPageviewProperties } from '@lib/analytics'
import * as Link from '@statmuse/core/link'
import { ANSWER_CARDS_ENABLED } from 'src/config'
import type { LeagueParam } from '@lib/params'
import AditudeAdBanner from '@components/aditude-ad-banner.svelte'

interface Props {
  answer: GameraDefaultResponse
}

const { answer } = Astro.props
const conversationToken = answer.conversation.token
const query = clean(
  tokensToText(
    answer.visual.summaryTokens?.filter((t) => t.type !== 'inferred'),
  ),
)
const preferredDomain = answer.visual.domain?.toLowerCase()
const domain = answer.visual.domain
const subject = answer.visual.summary.subject
const contentReference = answer.visual.contentReference
const heroProps = getHeroProps({ imageAlt: query, response: answer })!
const meta = {
  title: title(query),
  description: description(answer),
  canonical: {
    url: createAskPath({
      domain: preferredDomain || '',
      query,
    }),
    rewrite: true,
  },
  pageType: 'ask',
  facebook: {
    imageUrl:
      heroProps?.imageUrl &&
      imageForgeUrl({
        url: heroProps.imageUrl,
        bgColor: subject.colors?.background,
        type: 'facebook',
      }),
  },
  twitter: {
    imageUrl:
      heroProps?.imageUrl &&
      imageForgeUrl({
        url: heroProps.imageUrl,
        bgColor: subject.colors?.background,
        type: 'twitter',
      }),
  },
}

const code = await Link.askShortCode(query, preferredDomain || '')

const pageType = (
  answer: GameraResponse,
): AnalyticsPageviewProperties['page_type'] => {
  if (answer.type === 'nlgPromptForMoreInfoVisualChoicesOptional')
    return 'prompt'
  if (answer.visual.detail?.find((d) => d.type === 'standings'))
    return 'standings'
  if (answer.visual.detail?.find((d) => d.type === 'schedule'))
    return 'schedule'
  if (answer.visual.detail?.find((d) => d.type.includes('BoxScore')))
    return 'game'
  return 'ask'
}

const shareUrl = `${process.env.SHORT_LINK_URL}e/${code?.short_code}`
const league = domain === 'EPL' ? 'fc' : (preferredDomain as LeagueParam)

const [questionTeamId] = contentReference?.questionTags?.teamIds ?? []
const [answerTeamId] = contentReference?.answerTags?.teamIds ?? []
const teamId = questionTeamId ?? answerTeamId

const [columnChart] = getColumnCharts(answer) ?? []
const isSuperlative = getIsSuperlative(answer)
const hasSupplement = !!columnChart
---

<Layout
  class="flex flex-col gap-3"
  colors={subject?.colors}
  {meta}
  analytics={{
    is_search: true,
    page_type: pageType(answer),
    page_domain: preferredDomain as AnalyticsPageviewProperties['page_domain'],
    disposition: answer.disposition,
    tokenizationScore: answer.tokenizationScore,
    query,
    contentReference: answer.visual.contentReference,
    subject: answer.visual.summary.subject,
  }}
  {query}
  {conversationToken}
  {preferredDomain}
  hero={{
    ...heroProps,
    hasSupplement,
    share: {
      type: 'ask',
      query,
      domain: preferredDomain,
      shortCode: code?.short_code,
    },
  }}
>
  <div class="h-[50px] md:h-[90px] mb-1.5 flex justify-center items-center">
    <AditudeAdBanner client:only="svelte" />
  </div>
  {
    columnChart ? (
      <Chart
        slot="hero-supplement"
        class="hidden md:block"
        model={columnChart}
        {isSuperlative}
      />
    ) : null
  }
  <Visuals class="" response={answer} {conversationToken} />
  <Explore {league} additionalQuestions={answer.visual.additionalQuestions} />
  {preferredDomain && ANSWER_CARDS_ENABLED && <AnswerCards {league} {teamId} />}
</Layout>
