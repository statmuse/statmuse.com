---
import type { Standings, GameraGrid } from '@statmuse/core/gamera'
import type { HTMLAttributes } from 'astro/types'
import Tabs from '@components/tabs.astro'
import TabPanel from '@components/tab-panel.astro'
import Grid from '@components/grid.svelte'

interface Props extends HTMLAttributes<'div'> {
  groups: {
    name: string
    standings: Standings[]
  }[]
  highlight?: string
}

const groups = Astro.props.groups
const allTeams = groups.flatMap((x) => x.standings.flatMap((s) => s.teams))

function addImageToGrid(grid: GameraGrid): GameraGrid {
  const rows = grid.rows.map((row) => ({
    ...Object.entries(row)
      .map(([key, value], i) => ({
        [key]: {
          ...value,
          imageUrl:
            i === 0
              ? allTeams.find((t) => t.name === value.value)?.logoUrl
              : undefined,
        },
      }))
      .reduce((acc, x) => ({ ...acc, ...x }), {}),
  }))
  return { ...grid, rows }
}
---

<div class="text-sm md:text-base">
  {
    groups.length > 1 ? (
      <Tabs titles={groups.map((g) => g.name)}>
        {groups.map((group) => (
          <TabPanel title={group.name}>
            {group.standings.map((x) => (
              <div class="my-4">
                <h3 class="font-bold text-team-primary mb-0.5">
                  {x.grid.name}
                </h3>
                <Grid
                  stickyColumns={['TEAM']}
                  columnStyles={{ TEAM: 'w-28' }}
                  data={addImageToGrid(x.grid)}
                  highlight={Astro.props.highlight}
                />
              </div>
            ))}
          </TabPanel>
        ))}
      </Tabs>
    ) : (
      groups.map((group) =>
        group.standings.map((x) => (
          <div class="my-4">
            <h3 class="font-bold text-team-primary mb-0.5">{x.grid.name}</h3>
            <Grid
              stickyColumns={['TEAM']}
              columnStyles={{ TEAM: 'w-28' }}
              data={addImageToGrid(x.grid)}
              highlight={Astro.props.highlight}
            />
          </div>
        )),
      )
    )
  }
</div>
