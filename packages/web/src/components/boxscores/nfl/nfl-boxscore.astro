---
import NflPregameBoxscore from './nfl-pregame-boxscore.astro'
import NflLivegameBoxscore from './nfl-livegame-boxscore.astro'
import NflPostgameBoxscore from './nfl-postgame-boxscore.astro'
import { parseGameId } from '@lib/parse'
import { NOT_FOUND_404 } from '@lib/response'
import { getGameData } from '@lib/gamera'

const { game } = Astro.params
const gameId = parseGameId(game ?? '')

const gameData = await getGameData({
  context: Astro,
  domain: 'NFL',
  gameId,
  statKeySet: [
    'defenseTotals',
    'fumbleTotals',
    'kickingTotals',
    'kickoffReturnTotals',
    'passingTotals',
    'puntReturnTotals',
    'puntingTotals',
    'receivingTotals',
    'rushingTotals',
  ],
})

if (!gameData) return NOT_FOUND_404
---

{
  (function () {
    switch (gameData.gameStatus) {
      case 'scheduled':
      case 'delayed':
      case 'postponed':
        return <NflPregameBoxscore {gameData} {gameId} />
      case 'inProgress':
      case 'halftime':
        return <NflLivegameBoxscore {gameData} {gameId} />
      case 'completed':
        return <NflPostgameBoxscore {gameData} {gameId} />
    }
  })()
}
