---
import MlbPregameBoxscore from './mlb-pregame-boxscore.astro'
import MlbLivegameBoxscore from './mlb-livegame-boxscore.astro'
import MlbPostgameBoxscore from './mlb-postgame-boxscore.astro'
import { parseGameId } from '@lib/parse'
import { NOT_FOUND_404 } from '@lib/response'
import { getGameData } from '@lib/gamera'
import Error from '@layouts/error.astro'

const { game } = Astro.params
const gameId = parseGameId(game ?? '')

const gameData = await getGameData({
  context: Astro,
  domain: 'MLB',
  gameId,
  statKeySet: ['battingStandard', 'pitchingStandard'],
  statKey: 'Fielding-Errors',
})
---

<Error
  render={!gameData || !!gameData.error}
  status={404}
  message="MLB game not found"
>
  {
    gameData &&
      (function () {
        switch (gameData.gameStatus) {
          case 'scheduled':
          case 'delayed':
            return <MlbPregameBoxscore {gameData} {gameId} />
          case 'inProgress':
            return <MlbLivegameBoxscore {gameData} {gameId} />
          case 'completed':
            return <MlbPostgameBoxscore {gameData} {gameId} />
        }
      })()
  }
</Error>
