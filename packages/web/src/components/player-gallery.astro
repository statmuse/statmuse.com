---
import Layout from '@layouts/base.astro'
import Image from '@components/image.astro'
import type { PlayerGalleryItem } from '@lib/player'
import { type GameraDomain, getUrlForEntity } from '@statmuse/core/gamera'
import type { AnalyticsPageviewProperties } from '@lib/analytics'
import Hero from '@components/hero.astro'
import AditudeAdBanner from '@components/aditude-ad-banner.svelte'

interface Props {
  domain?: GameraDomain
  players: PlayerGalleryItem[]
}

const { domain = 'All', players } = Astro.props

const alphabet = [...Array(26)].map((_x, i) =>
  String.fromCharCode(i + 65).toLowerCase(),
)

const groupedByFirstLetterLastName = players.reduce(
  (acc: { [key: string]: PlayerGalleryItem[] }, player) => {
    const [char] =
      player.last_name && player.used_name.includes(player.last_name)
        ? player.last_name
        : player.used_name

    if (acc.hasOwnProperty(char.toLowerCase())) {
      acc[char.toLowerCase()].push(player)
    } else {
      acc[char.toLowerCase()] = [player]
    }

    return acc
  },
  {},
)

const colors = {
  foreground: '#fff',
  background: '#00c1d8',
}

const meta = {
  title:
    domain !== 'All'
      ? `${domain === 'EPL' ? 'Premier League' : domain} Player Gallery`
      : 'Player Gallery',
  description: `Browse the largest gallery of ${
    domain !== 'All' ? `${domain === 'EPL' ? 'Premier League' : domain} ` : ''
  }player illustrations in the world.`,
}
---

<Layout
  {meta}
  {colors}
  analytics={{
    page_domain:
      domain !== 'All'
        ? (domain.toLowerCase() as AnalyticsPageviewProperties['page_domain'])
        : 'sports',
    page_type: 'player',
  }}
  renderRightColumn={false}
>
  <Hero
    content="Player Gallery"
    navProps={{
      href: () => '',
      selected: domain,
      links: [
        { text: 'All', param: 'All', href: '/players' },
        { text: 'NBA', param: 'NBA', href: '/nba/players' },
        { text: 'NFL', param: 'NFL', href: '/nfl/players' },
        { text: 'NHL', param: 'NHL', href: '/nhl/players' },
        { text: 'MLB', param: 'MLB', href: '/mlb/players' },
        { text: 'PGA', param: 'PGA', href: '/pga/players' },
        { text: 'Premier League', param: 'EPL', href: '/fc/players' },
      ],
    }}
  />
  <div class="h-[50px] md:h-[90px] flex justify-center items-center">
    <AditudeAdBanner
      client:only="svelte"
      divId="pb-slot-anchor"
      slotId="pb-slot-anchor"
      placeholderClass="w-[320px] md:w-[728px] h-[50px] md:h-[90px]"
    />
  </div>
  <div class="flex justify-start md:justify-center py-4 overflow-auto">
    {
      alphabet.map((letter) => (
        <a
          class="text-[#333] dark:text-current mx-0.5 rounded-md uppercase w-6 h-6 shrink-0 flex justify-center items-center"
          href={`#${letter}`}
          data-click-nav
        >
          {letter}
        </a>
      ))
    }
  </div>
  <div class="flex flex-wrap justify-center">
    {
      Object.entries(groupedByFirstLetterLastName).map(
        ([letter, [firstPlayer, ...players]], i) => {
          return (
            <>
              <a
                href={getUrlForEntity({
                  id: firstPlayer.resource_id,
                  type: 'player',
                  display: firstPlayer.used_name,
                  domain: firstPlayer.domain as GameraDomain,
                })}
              >
                <div
                  class="h-28 w-28 md:h-44 md:w-44 m-0.5 md:m-1.5 rounded-2xl flex justify-center overflow-hidden relative"
                  style={`background: ${firstPlayer.background_color_hex};`}
                >
                  <Image
                    data-cy-illustration
                    class="h-full mt-1.5 md:mt-2.5 object-cover"
                    alt={firstPlayer.used_name}
                    src={firstPlayer.bust_image_url!}
                    width={120}
                    height={120}
                    loading={i < 20 ? 'eager' : 'lazy'}
                  />
                  <div
                    class="absolute w-full h-full"
                    style="background: linear-gradient(to top, black 0%, transparent 25%);"
                  />
                  <h3 class="text-sm md:text-sm font-bold text-center text-white absolute bottom-1">
                    {firstPlayer.used_name}
                  </h3>
                </div>
              </a>
              <div
                id={`${letter}`}
                class="relative -top-[62px] md:-top-[70px]"
              />
              {players.map((player, i) => (
                <a
                  href={getUrlForEntity({
                    id: player.resource_id,
                    type: 'player',
                    display: player.used_name,
                    domain: player.domain as GameraDomain,
                  })}
                >
                  <div
                    class="h-28 w-28 md:h-44 md:w-44 m-0.5 md:m-1.5 rounded-2xl flex justify-center overflow-hidden relative"
                    style={`background: ${player.background_color_hex};`}
                  >
                    <Image
                      data-cy-illustration
                      class="h-full mt-1.5 md:mt-2.5 object-cover"
                      alt={player.used_name}
                      src={player.bust_image_url!}
                      width={120}
                      height={120}
                      loading={i < 20 ? 'eager' : 'lazy'}
                    />
                    <div
                      class="absolute w-full h-full"
                      style="background: linear-gradient(to top, black 0%, transparent 25%);"
                    />
                    <h3 class="text-sm md:text-sm font-bold text-center text-white absolute bottom-1">
                      {player.used_name}
                    </h3>
                  </div>
                </a>
              ))}
            </>
          )
        },
      )
    }
  </div>
  <p
    class="my-4"
    style="color: #969ca1; text-align: right; font-style: italic;"
  >
    All illustrations and content on this site &copy; 2016-{
      new Date().getFullYear()
    } StatMuse, Inc.<br />
     Unauthorized duplication or usage prohibited.
  </p>
</Layout>
<script>
  document.addEventListener('astro:page-load', () => {
    // Player Gallery Alphabet Nav Highlight
    document.querySelectorAll('[data-click-nav]').forEach((el) => {
      const element = el as HTMLAnchorElement
      element.addEventListener('click', () => {
        // remove classes from previously selected item
        document.querySelectorAll('[data-highlight="true"]').forEach((n) => {
          ;['text-white', 'bg-primary', 'hover:no-underline'].forEach((x) => {
            n.classList.remove(x)
          })
        })

        element.classList.add('text-white')
        element.classList.add('bg-primary')
        element.classList.add('hover:no-underline')
        element.dataset.highlight = 'true'
      })
    })
  })
</script>
