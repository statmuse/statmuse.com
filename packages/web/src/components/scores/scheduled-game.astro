---
import EntityLink from '@components/entity-link.astro'
import Image from '@components/image.astro'
import Timestamp from '@components/timestamp.svelte'
import type {
  GameraDomain,
  GameraTeamReference,
  ScheduledGame,
} from '@statmuse/core/gamera'
import dayjs from 'dayjs'

interface Props {
  game: ScheduledGame
  awayTeam?: GameraTeamReference
  homeTeam?: GameraTeamReference
  domain: GameraDomain
  mini?: boolean
}

const { game, awayTeam, homeTeam, domain, mini } = Astro.props
---

<EntityLink
  entity={{
    id: game.id.toString(),
    type: 'game',
    display: `${dayjs(game.gameDate).format('M/D/YYYY')} ${
      awayTeam?.abbreviation
    } @ ${homeTeam?.abbreviation}`,
    domain,
  }}
  class:list={{
    'flex  py-2 px-3 text-inherit hover:no-underline': true,
    'gap-3': !mini,
    'gap-5': mini,
  }}
>
  <div class="flex-1 w-max">
    <div class="flex items-center gap-2 py-0.5">
      <Image
        src={awayTeam?.logoImageUrl ?? ''}
        alt={awayTeam?.name ?? ''}
        width={60}
        height={60}
        class="w-4 h-4 object-contain"
      />
      <p>{mini ? awayTeam?.abbreviation : awayTeam?.nickname}</p>
    </div>
    <div class="flex items-center gap-2 py-0.5">
      <Image
        src={homeTeam?.logoImageUrl ?? ''}
        alt={homeTeam?.name ?? ''}
        width={60}
        height={60}
        class="w-4 h-4 object-contain"
      />
      <p>{mini ? homeTeam?.abbreviation : homeTeam?.nickname}</p>
    </div>
  </div>
  {
    !mini && (
      <div class="w-max flex items-center justify-end text-right text-sm text-gray-5">
        {game.odds?.sportsbooks?.[0].homeTeam.spreadOdds.display ? (
          <p>
            {homeTeam?.abbreviation}{' '}
            {game.odds?.sportsbooks?.[0].homeTeam.spreadOdds.display}
          </p>
        ) : undefined}
      </div>
    )
  }
  <div
    class:list={{
      'flex items-center justify-end text-right text-sm': true,
      'w-20': !mini,
      'w-max': mini,
    }}
  >
    <div class="text-nowrap">
      <p class="py-1">
        <Timestamp
          client:only="svelte"
          timeOnly
          timestamp={game.gameTimestamp}
        />
      </p>
      {
        mini && (
          <p class="text-gray-5 py-1">
            {game.odds?.sportsbooks?.[0].homeTeam.spreadOdds.display}
          </p>
        )
      }
    </div>
  </div>
</EntityLink>
