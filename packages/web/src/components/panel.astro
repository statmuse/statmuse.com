---
import type { HTMLAttributes } from 'astro/types'
import { rgbToHex } from '@statmuse/core/color'
import EntityLink from '@components/entity-link.svelte'
import type { GameraEntity } from '@statmuse/core/gamera'
import type { KanedamaEntity } from '@statmuse/core/kanedama'

type Color = string | { r: number; g: number; b: number; a: number }

interface Props extends HTMLAttributes<'div'> {
  team?: boolean
  href?: string
  entity?: GameraEntity | KanedamaEntity
  title?: string
  background?: Color
  foreground?: Color
}

const { team, background, foreground, title, href, entity, ...props } =
  Astro.props

const backgroundHex = background
  ? typeof background === 'string'
    ? background
    : rgbToHex(background)
  : undefined
const foregroundHex = foreground
  ? typeof foreground === 'string'
    ? foreground
    : rgbToHex(foreground)
  : undefined
---

<div
  class:list={{
    'relative rounded-2xl px-3 py-2 overflow-clip': true,
    'bg-gray-8 dark:bg-gray-3': !background,
    'text-inherit': !foreground,
    'border border-gray-6 dark:border-gray-4': !background,
    '!bg-team-primary !text-team-secondary': team,
    [Astro.props.class ?? '']: !!Astro.props.class,
  }}
  style={`${backgroundHex ? `background-color: ${backgroundHex};` : ''} ${
    foregroundHex ? `color: ${foregroundHex};` : ''
  }`}
  {...props}
>
  {
    entity ? (
      <EntityLink {entity} class="font-semibold mb-2 text-inherit">
        {title}
      </EntityLink>
    ) : href ? (
      <a {href} class="font-semibold mb-2 text-inherit no-underline">
        {title}
      </a>
    ) : title ? (
      <h3 class="font-semibold mb-2">{title}</h3>
    ) : null
  }
  <slot />
</div>
