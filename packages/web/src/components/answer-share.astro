---
const closeSvg = ''
const fbSvg = ''
const twitterSvg = ''
const url = ''

const socialButtons = [
  {
    label: 'Facebook',
    icon: fbSvg,
    bgColor: '#3C5A99',
    shareUrl: (x: string) =>
      'https://www.facebook.com/sharer/sharer.php?' +
      new URLSearchParams({ u: x }).toString(),
  },
  {
    label: 'Twitter',
    icon: twitterSvg,
    bgColor: '#1DA1F2',
    shareUrl: (x: string) =>
      'http://twitter.com/share?' + new URLSearchParams({ url: x }).toString(),
  },
]
---

<div>
  <input id="answer-share" type="checkbox" class="hidden peer" />
  <label for="answer-share" class="cursor-pointer">
    <svg
      width="25"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 22.7 22.7"
      xml:space="preserve"
    >
      <g
        style="fill: none; stroke: var(--team-secondary-color, #c5c9cc); stroke-width: 1.5; stroke-linecap: round; stroke-linejoin: round; stroke-miterlimit: 10;"
      >
        <polyline points="6.5,8.9 11.4,4 16.2,8.8"></polyline><line
          x1="11.4"
          y1="4"
          x2="11.4"
          y2="13.1"
        >
        </line><polyline points="3.2,13.2 3.2,18.7 19.5,18.7 19.5,13.2">
        </polyline>
      </g>
    </svg>
  </label>
  <div
    class="hidden peer-checked:block fixed w-full h-full top-0 left-0 z-[10]"
  >
    <label for="answer-share">
      <div class="w-full h-full bg-black/40 absolute top-0 left-0"></div>
    </label>
    <div
      class="bg-white w-[98%] max-w-[500px] absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 text-[#333] px-3 py-6 sm:p-6 text-left"
    >
      <label for="answer-share" class="cursor-pointer">
        <img
          src={closeSvg}
          class="w-4 h-4 absolute top-6 right-3 sm:right-6"
          alt="close"
        />
      </label>
      <p class="mb-4">Share a link to this question</p>
      <div class="flex">
        {
          socialButtons.map((button) => (
            <div style={{ textAlign: 'center', fontSize: '14px' }}>
              <a
                href={button.shareUrl(url)}
                class="flex items-center justify-center w-16 h-16 my-1 mx-2.5 rounded-full"
                style={{ background: button.bgColor }}
                target="_blank"
                rel="noopener noreferrer"
              >
                <img
                  src={button.icon}
                  class="w-7 h-7 object-contain"
                  alt={button.label}
                />
              </a>
              {button.label}
            </div>
          ))
        }
      </div>
      <div class="relative my-5 cursor-pointer">
        <input
          class="w-full h-[42px] outline-none cursor-pointer px-4 pr-[70px] text-sm bg-[#fbfbfb] border border-[#e4e4e4] overflow-auto"
          type="text"
          value={url}
          readonly
          data-share-link
        />
        <span
          class="absolute top-1/2 right-4 -translate-y-1/2 text-primary font-semibold text-sm"
        >
          COPY
        </span>
      </div>
      <div
        style={{
          height: '1px',
          width: '100%',
          backgroundColor: '#e4e4e4',
          marginBottom: '20px',
        }}
      >
      </div>
      <div style={{ display: 'flex', alignItems: 'center' }}>
        <input
          id="share-checkbox"
          type="checkbox"
          class="appearance-none bg-white checked:bg-primary border-2 border-primary rounded-sm w-5 h-5 mr-2.5 cursor-pointer flex items-center justify-center after:content-['\\2713'] after:text-white"
        />
        <label
          for="share-checkbox"
          style={{ color: '#d1d1d1', fontSize: '14px', cursor: 'pointer' }}
        >
          Keep answer updated | Shorten link
        </label>
      </div>
      <p style={{ marginTop: '1em', fontSize: '14px', color: '#d1d1d1' }}>
        This answer is live and will keep updating
      </p>
    </div>
  </div>
</div>
<script>
  const input = document.querySelector<HTMLInputElement>('[data-share-link]')
  if (input) {
    input.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(input.value)
        const span = input.parentNode?.querySelector('span')
        if (span) {
          span.innerText = 'COPIED'
        }
      } catch (err) {}
    })
  }
</script>
