---
import type { HTMLAttributes } from 'astro/types'
import { type TrendingListItem } from 'src/types'
import Image from '@components/image.astro'

interface Props extends HTMLAttributes<'li'> {
  item: TrendingListItem
  index: number
  numbered?: boolean
  prominent?: boolean
  eager?: boolean
  smallImage?: boolean
}

const { item, index, prominent, ...rest } = Astro.props
const numbered = Astro.props.numbered ?? true
const eager = Astro.props.eager ?? false
const smallImage = Astro.props.smallImage ?? false
const representatives = item.images.map((i) => ({ url: i }))
---

<li {...rest}>
  <a
    href={item.uri}
    class:list={{
      flex: true,
      'items-center text-inherit overflow-clip pr-3': true,
      'pt-3': numbered,
      'pt-1': !numbered,
    }}
  >
    <div
      class:list={{
        'flex-1 flex gap-3': true,
        'pl-3': !numbered,
      }}
    >
      {
        numbered ? (
          <p class="self-center w-10 flex-shrink-0 text-gray-5 text-center">
            {index + 1}
          </p>
        ) : null
      }
      <p
        class:list={{
          'self-center leading-5 text-pretty': true,
        }}
        set:html={item.title}
      />
    </div>
    <div
      class:list={{
        'relative flex items-end': true,
      }}
    >
      {
        representatives.length === 1 && (
          <Image
            class:list={{
              'h-[90px] max-w-[120px]': !smallImage,
              'h-[60px] max-w-[80px]': smallImage,
              'select-none object-contain object-bottom': true,
            }}
            alt={representatives[0].entity?.display ?? ''}
            src={representatives[0].url}
            width={180}
            height={180}
            loading="eager"
          />
        )
      }
      {
        representatives.length > 1 &&
          representatives.map((representative, index) => (
            <Image
              class:list={{
                'h-[75px] max-w-[100px]': !smallImage,
                'h-[60px] max-w-[80px]': smallImage,
                'select-none object-contain object-bottom': true,
                'absolute left-0 bottom-0 -translate-x-[40px]': index === 0,
                'relative z-[1]': index === 1,
                'absolute right-0 bottom-0 translate-x-[40px]': index === 2,
              }}
              alt={representative.entity?.display ?? ''}
              src={representative.url}
              width={180}
              height={180}
              loading="eager"
            />
          ))
      }
    </div>
  </a>
</li>
