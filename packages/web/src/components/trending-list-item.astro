---
import type { HTMLAttributes } from 'astro/types'
import { type TrendingListItem } from 'src/types'
import Representatives from '@components/representatives.astro'

interface Props extends HTMLAttributes<'li'> {
  item: TrendingListItem
  index: number
  numbered?: boolean
  prominent?: boolean
  eager?: boolean
}

const { item, index, prominent, ...rest } = Astro.props
const numbered = Astro.props.numbered ?? true
const eager = Astro.props.eager ?? false
const representatives = item.images.map((i) => ({ url: i }))
---

<li {...rest}>
  <a
    href={item.uri}
    class:list={{
      flex: item.images.length === 0,
      'grid grid-cols-3': item.images.length > 0,
      'items-center text-inherit overflow-clip': true,
      'pt-3': numbered,
      'pt-1': !numbered,
    }}
  >
    <div
      class:list={{
        'flex gap-3': true,
        'col-span-2': item.images.length === 1,
        'pl-3': !numbered,
      }}
    >
      {
        numbered ? (
          <p class="self-center w-10 flex-shrink-0 text-center">{index + 1}</p>
        ) : null
      }
      <p
        class:list={{
          'self-center leading-5 text-pretty': true,
          'text-xl': prominent,
        }}
        set:html={item.title}
      />
    </div>
    <div
      class:list={{
        'relative flex items-end h-24': true,
        '-ml-12': item.images.length === 1,
        'ml-16 -mr-28': item.images.length === 2,
        'ml-12 -mr-12': item.images.length === 3,
      }}
    >
      <Representatives
        {representatives}
        class:list={{ 'scale-75 origin-bottom': true }}
      />
    </div>
  </a>
</li>
