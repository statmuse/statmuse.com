---
import Icon from '@components/icon.svelte'
import AuthLink from '@components/auth-link.svelte'
import Panel from '@components/panel.astro'
import ThemeSwitch from '@components/theme-switch.svelte'
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'div'> {
  id: string
}

const { id } = Astro.props

const menuLinks = [
  [
    {
      text: 'Home',
      icon: 'all-home',
      url: '/',
      currentUrl: new RegExp('^/$'),
    },
    {
      text: 'FC',
      icon: 'fc',
      url: '/fc',
      currentUrl: new RegExp('^/fc$'),
    },
    {
      text: 'NBA',
      icon: 'nba',
      url: '/nba',
      currentUrl: new RegExp('^/nba$'),
    },
    {
      text: 'NFL',
      icon: 'nfl',
      url: '/nfl',
      currentUrl: new RegExp('^/nfl$'),
    },
    {
      text: 'NHL',
      icon: 'nhl',
      url: '/nhl',
      currentUrl: new RegExp('^/nhl$'),
    },
    {
      text: 'MLB',
      icon: 'mlb',
      url: '/mlb',
      currentUrl: new RegExp('^/mlb$'),
    },
    {
      text: 'PGA',
      icon: 'pga',
      url: '/pga',
      currentUrl: new RegExp('^/pga$'),
      beta: true,
    },
    {
      text: 'Money',
      icon: 'money',
      url: '/money',
      currentUrl: new RegExp('^/money$'),
      beta: true,
    },
  ],
  [
    {
      text: 'Trending',
      icon: 'trending-sports',
      subLinks: [
        {
          text: 'Trending Sports',
          icon: '',
          url: '/trending',
          currentUrl: new RegExp('^(/(nba|nfl|nhl|mlb|pga|fc))?/trending$'),
        },
        {
          text: 'Trending Money',
          icon: '',
          url: '/money/trending',
          currentUrl: new RegExp('^/money/trending$'),
        },
        {
          text: 'Trending Live',
          icon: '',
          url: '/questions',
          currentUrl: new RegExp(
            '^(/(nba|nfl|nhl|mlb|pga|fc|money))?/questions$',
          ),
        },
      ],
    },
    {
      text: 'Gallery',
      icon: 'gallery',
      url: '/players',
      currentUrl: new RegExp('^(/(nba|nfl|nhl|mlb|pga|fc))?/players$'),
    },
  ],
  [
    {
      text: 'Examples',
      icon: 'search',
      url: '/product/examples',
      currentUrl: new RegExp('^/product/examples(/(nba|nfl|nhl|mlb|pga|fc))?$'),
    },
    {
      text: 'Data & Glossary',
      icon: 'glossary',
      url: '/product/data',
      currentUrl: new RegExp('^/product/data(/(nba|nfl|nhl|mlb|pga|fc))?$'),
    },
  ],
  [
    {
      text: 'About',
      icon: 'about',
      url: '/company/about',
      currentUrl: new RegExp('^/company/about$'),
    },
    {
      text: 'Blog',
      icon: 'blog',
      url: 'https://blog.statmuse.com/',
      external: true,
    },
    {
      text: 'Shop',
      icon: 'shop',
      url: 'https://shop.statmuse.com',
      external: true,
    },
  ],
] as {
  text: string
  icon: string
  url: string
  classes?: string
  external?: boolean
  currentUrl?: RegExp
}[][]
---

<div
  class:list={{
    'flex flex-col gap-3 w-[210px] md:mx-auto': true,
    [Astro.props.class ?? '']: !!Astro.props.class,
  }}
>
  <Panel class="md:hidden">
    <AuthLink client:load />
  </Panel>
  {
    menuLinks.map((links) => (
      <Panel>
        <ul class="space-y-2 group/submenu">
          {links.map(
            ({
              icon,
              text,
              url,
              external,
              currentUrl,
              classes,
              subLinks,
              beta,
            }) => (
              <>
                <li>
                  {!subLinks ? (
                    <a
                      href={url}
                      target={external ? '_blank' : null}
                      class:list={{
                        'flex flex-1 items-center gap-3 text-inherit': true,
                        'md:flex-initial': true,
                        'hover:text-teal hover:no-underline': true,
                        '!text-teal': currentUrl?.test(Astro.url.pathname),
                        [classes ?? '']: !!classes,
                      }}
                    >
                      <Icon name={icon} class="block w-5 h-5 object-cover" />
                      {text}
                      {beta && (
                        <Icon
                          name="beta"
                          fill={text === 'Money' ? '#EFA125' : '#00C1D8'}
                          class="block -ml-1.5 h-6 object-cover"
                        />
                      )}
                    </a>
                  ) : (
                    <label
                      for={`${id}-trending-submenu`}
                      class:list={{
                        'flex flex-1 items-center gap-3 text-inherit cursor-pointer': true,
                        'md:flex-initial': true,
                        'hover:text-teal hover:no-underline': true,
                        '!text-teal': currentUrl?.test(Astro.url.pathname),
                        [classes ?? '']: !!classes,
                      }}
                    >
                      <Icon name={icon} class="block w-5 h-5 object-cover" />
                      <span class="flex-1">{text}</span>
                      <Icon
                        name="dropdown"
                        class="block w-4 h-4 object-cover group-has-[input:checked]/submenu:rotate-180"
                      />
                    </label>
                  )}
                </li>
                {subLinks && (
                  <div class="flex flex-col space-y-2 relative overflow-clip h-0 has-[input:checked]:h-fit !mt-0">
                    <input
                      class="absolute top-0 opacity-0"
                      type="checkbox"
                      id={`${id}-trending-submenu`}
                    />
                    {subLinks?.map(
                      ({ icon, text, url, external, currentUrl }) => (
                        <li>
                          <a
                            href={url}
                            target={external ? '_blank' : null}
                            class:list={{
                              'flex flex-1 items-center gap-3 text-inherit': true,
                              'md:flex-initial': true,
                              'hover:text-teal hover:no-underline': true,
                              '!text-teal': currentUrl?.test(
                                Astro.url.pathname,
                              ),
                              [classes ?? '']: !!classes,
                            }}
                          >
                            <Icon
                              name={icon}
                              class="block w-5 h-5 object-cover"
                            />
                            {text}
                          </a>
                        </li>
                      ),
                    )}
                  </div>
                )}
              </>
            ),
          )}
        </ul>
      </Panel>
    ))
  }
  <div class="hidden md:block">
    <ThemeSwitch client:load />
  </div>
</div>
